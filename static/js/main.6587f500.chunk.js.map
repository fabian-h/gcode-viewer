{"version":3,"sources":["app/UIStore.ts","app/gcode-parser.ts","components/GCodeViewer.tsx","components/LiveGCodeViewer.tsx","app/file-upload.ts","components/GCodeDropzone.tsx","components/StaticGCodeViewer.tsx","components/DrawSettings.tsx","components/Statistics.tsx","app/OctoprintConnection.ts","app/OctoprintStore.ts","components/octoprint/OctoprintAddDialog.tsx","components/octoprint/OctoprintOverview.tsx","components/App.tsx","index.tsx"],"names":["store","_dec","action","bound","_dec2","_dec3","observable","ref","_class","UIStore","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","createClass","key","value","setting","n","activeLayer","newTransform","transform","gcode","activeGCode","get","numberOfLayers","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","k","x","y","lineWidth","coloringMode","toolColors","scaleLinewidth","drawPreviousLayers","getOwnPropertyDescriptor","computed","STATE_NONE","CHAR_0","charCodeAt","CHAR_9","CHAR_DOT","CHAR_MINUS","CHAR_SPACE","CHAR_TAB","CHAR_A","CHAR_Z","CHAR_LF","CHAR_CR","CHAR_SEMICOLON","COMMANDS","MOVE_WITH_EXTRUSION","MOVE_WITHOUT_EXTRUSION","SET_FEED_RATE","RETRACTION","LAYER_CHANGE","TOOL_CHANGE","INSTRUCTION_ARRAY_BLOCK_SIZE","LOOKUP_BEFORE_DOT","LOOKUP_AFTER_DOT","GCodeParser","state","field","value_start","dot_position","prev_character","field_values","Float32Array","axis_coordinates_absolute","extruder_coordinates_absolute","feed_rate","current_tool","prev_z","last_z_with_extrusion","last_feed_rate_with_extrusion","current_layer_index","layer_positions","layer_heights","layer_byte_positions","prev_x","prev_y","prev_e","instructions","Instructions","byte_index","last_block","statistics","min","Infinity","max","z","extruded_feed_rate","tools","extrusion","fill","NaN","gcodeArrayBuffer","c","data","Uint8Array","i","length","undefined","temp_data","Array","from","concat","slice","temp_dot_position","j","pFloat","isNaN","addInstruction","command","x_coord","y_coord","push","totalInstructions","data_start","data_end","dot_location","result","negative","layerPositions","layerHeights","layerBytePositions","lineIndex","blockSizeInInstructions","buffers","currentBuffer","currentInstruction","currentFloat32Array","lastByteIndex","ArrayBuffer","param1","param2","command_and_byte_index","StyledCanvas","styled","canvas","_templateObject","OverlayDiv","div","_templateObject2","GCodeViewer","observer","_ref","currentLayer","bytesToDraw","setTransform","drawSettings","_useState","useState","_useState2","slicedToArray","context","setContext","useRef","doZoom","event","draw","current","save","clearRect","width","height","restore","clearCanvas","layer","devicePixelRatio","lineCap","to","overrideColor","prevX","prevY","feedRateScale","scaleLinear","domain","range","beginPath","currentF32Buffer","firstBuffer","Math","floor","lastBuffer","bytesDrawn","offset","end","moveTo","lineTo","stroke","strokeStyle","interpolateInferno","color","drawLayer","drawInstructions","useEffect","getContext","zoomBehaviour","zoom","on","scaleExtent","select","react","resizeSensor","onResize","currentHeight","clientHeight","currentWidth","clientWidth","window","toFixed","LiveGCodeViewer","_ref$UIStore","connection","progress","bytePosition","rv","getLayerFromBytePosition","filepos","components_GCodeViewer","uploadGCodeFiles","files","Promise","resolve","reject","file","reader","FileReader","parser","t0","performance","now","readSlice","s","readAsArrayBuffer","onload","parse","size","delta","fileSizeMB","console","log","parsingResult","getParsingResult","objectSpread","name","DropzoneContainer","GCodeDropzone_templateObject","CenteredParagraph","p","GCodeDropzone_templateObject2","GCodeDropzone","onFileLoad","onDrop","useCallback","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","acceptedFiles","wrap","_context","prev","next","setActiveGCode","sent","stop","_x","apply","arguments","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","react_default","createElement","StyledDiv","StaticGCodeViewer_templateObject","StaticGCodeViewer","isDragging","setDragging","onDragOver","e","onDragLeave","DrawSettingsButton","props","isOpen","setOpen","buttons","className","icon","text","onClick","SettingsDrawer","assign","handleClose","objectWithoutProperties","drawer","hasBackdrop","onClose","title","Classes","DRAWER_BODY","DIALOG_BODY","DrawSettings_DrawSettings","DrawSettings","formGroup","label","labelFor","numericInput","id","onValueChange","newValue","controls","checked","onChange","target","radioGroup","selectedValue","changeEvent","StatisticsModal","dialog","ToolTable","htmlTable","bordered","condensed","map","tool","index","OctoprintConnection","port","user","apikey","_this","url","socket","OctoprintConnection_descriptor","OctoprintConnection_descriptor2","serverId","random","sessionId","generateSessionId","WebSocket","onmessage","handleMessage","onopen","send","path","fetch","headers","X-Api-Key","chars","charAt","newStatus","status","newProgress","newJob","completion","filename","origin","startsWith","payload","JSON","updateStatus","updateProgress","job","OctoprintStore","OctoprintStore_descriptor","servers","config","autorun","reaction","hostname","server","localStorage","setItem","stringify","defaultValue","savedValue","getItem","StyledCallout","Callout","OctoprintAddDialog_templateObject","ValidationSchema","Yup","shape","required","integer","octoprintAddMachine","Machine","initial","states","idle","CONNECT","connecting","CONNECTION_SUCCESS","CONNECTION_FAILURE","polling_for_auth","AUTH_REQUEST_ACCEPTED","AUTH_REQUEST_DENIED","connection_failed","auth_successful","RESET","auth_failed","connectToOctoprint","_callee2","response","_context2","abrupt","pollingForAuth","_callee3","app_token","pollResponse","body","_context3","mode","method","Content-Type","app","json","api_key","setTimeout","OctoprintAddDialog","_useMachine","useMachine","_useMachine2","currentState","formik_esm","initialValues","onSubmit","values","addServer","_x5","validationSchema","render","OctoprintAddDialog_TextField","disabled","matches","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","type","intent","callout","StyledDangerCallout","OctoprintAddDialog_templateObject2","CustomInputComponent","inputGroup","error","TextField","_ref3","component","StyledCard","Card","OctoprintOverview_templateObject","OverviewContainer","OctoprintOverview_templateObject2","bytesReceived","getCurrentFile","getReader","read","done","live","OctoprintOverview","Fragment","handlePreview","FocusStyleManager","onlyShowFocusOnTabs","GridContainer","App_templateObject","TopbarContainer","App_templateObject2","ViewerContainer","_templateObject3","ToolContainer","_templateObject4","App","IProps","navbar","Group","align","Alignment","LEFT","Heading","Divider","setDrawSetting","octoprint_OctoprintAddDialog","Statistics","components_LiveGCodeViewer","components_StaticGCodeViewer","octoprint_OctoprintOverview","slider","labelStepSize","ceil","setActiveLayer","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6587f500.chunk.js","sourcesContent":["/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport { observable, action, computed } from \"mobx\";\nimport { Instructions, IStatistics } from \"./gcode-parser\";\nimport { ITransform } from \"components/GCodeViewer\";\nimport OctoprintConnection from \"./OctoprintConnection\";\n\nexport class UIStore {\n  @observable\n  transform: ITransform = { k: 1, x: 0, y: 0 };\n\n  @observable\n  activeLayer: number = 0;\n\n  @observable\n  trackProgress: boolean = false;\n\n  @observable\n  drawSettings: IDrawSettings = {\n    lineWidth: 8,\n    coloringMode: \"feed_rate\",\n    toolColors: [\"blue\", \"green\", \"red\", \"orange\", \"black\"],\n    scaleLinewidth: true,\n    drawPreviousLayers: 2\n  };\n\n  @action.bound\n  setDrawSetting(setting: keyof IDrawSettings, value: any) {\n    //this.drawSettings[setting] = value;\n  }\n\n  @computed\n  get numberOfLayers() {\n    return this.activeGCode === null ? 0 : this.activeGCode.numberOfLayers;\n  }\n\n  @action\n  setActiveLayer(n: number) {\n    this.activeLayer = n;\n  }\n\n  @action.bound\n  setTransform(newTransform: ITransform) {\n    this.transform = newTransform;\n  }\n\n  @action\n  setActiveGCode(gcode: IGCode | null) {\n    /*if (gcode) {\n      this.setTransform({\n        k: 3,\n        x: gcode.statistics.x.min || 0,\n        y: gcode.statistics.y.min || 0,\n      });\n    }*/\n    this.activeGCode = gcode;\n    this.activeLayer = 1;\n  }\n\n  @observable.ref\n  activeGCode: IGCode | null = null;\n}\n\nconst store = new UIStore();\nexport default store;\n\nexport interface IGCode {\n  name: string;\n  instructions: Instructions;\n  layerPositions: number[];\n  layerHeights: number[];\n  layerBytePositions: number[];\n  numberOfLayers: number;\n  statistics: IStatistics;\n  connection?: OctoprintConnection;\n  lineIndex: number[];\n  live?: boolean;\n}\n\nexport interface IDrawSettings {\n  lineWidth: number;\n  coloringMode: string; // \"feed_rate\" | \"tool\";\n  toolColors: string[];\n  scaleLinewidth: boolean;\n  drawPreviousLayers: number;\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\ninterface IMinMax {\n  min: number;\n  max: number;\n}\n\ninterface ITool {\n  extrusion: number;\n}\nexport interface IStatistics {\n  x: IMinMax;\n  y: IMinMax;\n  z: IMinMax;\n  feed_rate: IMinMax;\n  extruded_feed_rate: IMinMax;\n  tools: ITool[];\n}\n\nconst STATE_NONE = 0;\nconst STATE_FIELD = 1;\nconst STATE_COMMENT = 2;\n\nconst E = 4;\nconst F = 5;\nconst G = 6;\nconst M = 12;\nconst T = 19;\nconst X = 23;\nconst Y = 24;\nconst Z = 25;\n\nconst CHAR_0 = \"0\".charCodeAt(0);\nconst CHAR_9 = \"9\".charCodeAt(0);\nconst CHAR_DOT = \".\".charCodeAt(0);\nconst CHAR_MINUS = \"-\".charCodeAt(0);\nconst CHAR_SPACE = \" \".charCodeAt(0);\nconst CHAR_TAB = \"\\t\".charCodeAt(0);\nconst CHAR_A = \"A\".charCodeAt(0);\nconst CHAR_Z = \"Z\".charCodeAt(0);\nconst CHAR_LF = \"\\n\".charCodeAt(0);\nconst CHAR_CR = \"\\r\".charCodeAt(0);\nconst CHAR_SEMICOLON = \";\".charCodeAt(0);\n\nexport const COMMANDS = {\n  MOVE_WITH_EXTRUSION: 1, // parameters: X,Y\n  MOVE_WITHOUT_EXTRUSION: 2, // parameters: X,Y\n  SET_FEED_RATE: 3, // parameters: F\n  RETRACTION: 4,\n  LAYER_CHANGE: 5, // parameters: Z\n  TOOL_CHANGE: 6\n};\n\nconst INSTRUCTION_ARRAY_BLOCK_SIZE = 1024 * 32;\n\nconst LOOKUP_BEFORE_DOT = [1, 10, 100, 1000, 10000, 100000, 1000000];\nconst LOOKUP_AFTER_DOT = [0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001];\n\nexport default class GCodeParser {\n  state = STATE_NONE;\n  field: number = 0;\n  value_start: number | undefined;\n  dot_position: number | undefined;\n  prev_character: number | undefined;\n  field_values = new Float32Array(27);\n\n  axis_coordinates_absolute = true;\n  extruder_coordinates_absolute = false;\n  feed_rate = 0;\n  current_tool = 0;\n\n  // for layer change detection\n  prev_z: number = 0;\n  last_z_with_extrusion: number | undefined;\n  last_feed_rate_with_extrusion: number | undefined;\n  current_layer_index = 0;\n  layer_positions: number[] = [];\n  layer_heights: number[] = [];\n  layer_byte_positions: number[] = [];\n\n  prev_x = 0;\n  prev_y = 0;\n  prev_e = 0;\n\n  instructions = new Instructions(INSTRUCTION_ARRAY_BLOCK_SIZE);\n\n  byte_index = 0;\n  //line_index: number[] = [];\n\n  last_block: Uint8Array | undefined;\n\n  constructor() {\n    this.field_values.fill(NaN);\n  }\n\n  statistics: IStatistics = {\n    x: {\n      min: Infinity,\n      max: -Infinity\n    },\n    y: {\n      min: Infinity,\n      max: -Infinity\n    },\n    z: {\n      min: 0,\n      max: -Infinity\n    },\n    feed_rate: {\n      min: Infinity,\n      max: -Infinity\n    },\n    extruded_feed_rate: {\n      min: Infinity,\n      max: -Infinity\n    },\n    tools: [\n      {\n        extrusion: 0\n      }\n    ]\n  };\n\n  parse(gcodeArrayBuffer: ArrayBuffer) {\n    const data = new Uint8Array(gcodeArrayBuffer);\n    var c;\n\n    for (let i = 0; i < data.length; ++i) {\n      c = data[i];\n      if ((c >= CHAR_0 && c <= CHAR_9) || c === CHAR_DOT || c === CHAR_MINUS) {\n        //if (STATE_FIELD) {\n        //value += c;\n        //}\n        if (c === CHAR_DOT) this.dot_position = i;\n      } else if (c === CHAR_SPACE || c === CHAR_TAB) {\n        if (this.state === STATE_FIELD && this.value_start) {\n          if (this.last_block !== undefined) {\n            // Special handling for numbers that cross the boundary of data blocks\n            const temp_data = new Uint8Array(\n              Array.from(this.last_block).concat(Array.from(data.slice(0, i)))\n            );\n            let temp_dot_position = temp_data.length;\n            for (let j = 0; j < temp_data.length; ++j) {\n              if (temp_data[j] === CHAR_DOT) temp_dot_position = j;\n            }\n            this.field_values[this.field - 65] = this.pFloat(\n              temp_data,\n              0,\n              temp_data.length,\n              temp_dot_position\n            );\n            this.last_block = undefined;\n          } else {\n            // regular float handling\n            this.field_values[this.field - 65] = this.pFloat(\n              data,\n              this.value_start,\n              i,\n              this.dot_position ? this.dot_position : i\n            );\n          }\n          this.value_start = undefined;\n          this.dot_position = undefined;\n          this.state = STATE_NONE;\n        }\n      } else if (c >= CHAR_A && c <= CHAR_Z) {\n        if (this.state === STATE_NONE) {\n          this.field = data[i];\n          this.state = STATE_FIELD;\n          this.value_start = i + 1;\n          //console.log(\"F\", this.field);\n        }\n      } else if (\n        (c === CHAR_CR || c === CHAR_LF) &&\n        (this.prev_character !== CHAR_CR && this.prev_character !== CHAR_LF)\n      ) {\n        if (STATE_FIELD && this.value_start) {\n          this.field_values[this.field - 65] = this.pFloat(\n            data,\n            this.value_start,\n            i,\n            this.dot_position ? this.dot_position : i\n          );\n        }\n        this.state = STATE_NONE;\n        this.value_start = undefined;\n        this.dot_position = undefined;\n\n        /*console.log(\n        \"G\",\n        this.field_values[G],\n        this.field_values[X],\n        this.field_values[Y],\n        this.field_values[E],\n        this.extruder_coordinates_absolute,\n        this.prev_e,\n        instruction_index\n      );*/\n        // check if this is a G command\n        if (!isNaN(this.field_values[G])) {\n          switch (this.field_values[G]) {\n            case 0: // G0\n            case 1: // G1\n              // The move or extrude command is moving in the XY plane and not the Z plane\n              // We're not handling XYZ movements at this moment\n              if (\n                !isNaN(this.field_values[X]) ||\n                !isNaN(this.field_values[Y])\n              ) {\n                // If E field is set and\n                // - relative extrusion value is positive or\n                // - absolute extrusion value is larger than previous extrusion value\n                // the command is a move with extrusion\n\n                var command;\n                var x_coord;\n                var y_coord;\n\n                if (\n                  !isNaN(this.field_values[E]) &&\n                  ((this.extruder_coordinates_absolute &&\n                    this.field_values[E] > this.prev_e) ||\n                    (!this.extruder_coordinates_absolute &&\n                      this.field_values[E] > 0))\n                ) {\n                  if (this.prev_z !== this.last_z_with_extrusion) {\n                    this.instructions.addInstruction(\n                      this.byte_index,\n                      COMMANDS.LAYER_CHANGE,\n                      this.prev_z\n                    );\n                    //this.line_index.push(this.byte_index);\n                    this.layer_positions.push(\n                      this.instructions.totalInstructions\n                    );\n                    this.layer_heights.push(this.prev_z);\n                    this.layer_byte_positions.push(this.byte_index);\n                    this.current_layer_index += 1;\n\n                    if (this.prev_z > this.statistics.z.max)\n                      this.statistics.z.max = this.prev_z;\n\n                    // set all relevant parameters at the start of each layer\n                    // so that each layer contains all necessary information\n                    // for displaying it\n                    this.instructions.addInstruction(\n                      this.byte_index,\n                      COMMANDS.MOVE_WITHOUT_EXTRUSION,\n                      this.prev_x,\n                      this.prev_y\n                    );\n                    this.instructions.addInstruction(\n                      this.byte_index,\n                      COMMANDS.SET_FEED_RATE,\n                      this.feed_rate\n                    );\n                    this.instructions.addInstruction(\n                      this.byte_index,\n                      COMMANDS.TOOL_CHANGE,\n                      this.current_tool\n                    );\n                  }\n\n                  command = COMMANDS.MOVE_WITH_EXTRUSION;\n                  this.last_z_with_extrusion = this.prev_z;\n                  if (this.feed_rate !== this.last_feed_rate_with_extrusion) {\n                    if (this.feed_rate > this.statistics.extruded_feed_rate.max)\n                      this.statistics.extruded_feed_rate.max = this.feed_rate;\n                    if (this.feed_rate < this.statistics.extruded_feed_rate.min)\n                      this.statistics.extruded_feed_rate.min = this.feed_rate;\n                  }\n                  this.last_feed_rate_with_extrusion = this.feed_rate;\n\n                  this.statistics.tools[\n                    this.current_tool\n                  ].extrusion += this.field_values[E];\n                } else {\n                  command = COMMANDS.MOVE_WITHOUT_EXTRUSION;\n                }\n\n                // Set X value for move command\n                if (!isNaN(this.field_values[X])) {\n                  if (this.axis_coordinates_absolute)\n                    x_coord = this.field_values[X];\n                  else x_coord = this.prev_x + this.field_values[X];\n                  if (x_coord > this.statistics.x.max)\n                    this.statistics.x.max = x_coord;\n                  if (x_coord < this.statistics.x.min)\n                    this.statistics.x.min = x_coord;\n                } else x_coord = this.prev_x;\n\n                // Set Y value for move command\n                if (!isNaN(this.field_values[Y])) {\n                  if (this.axis_coordinates_absolute)\n                    y_coord = this.field_values[Y];\n                  else y_coord = this.prev_y + this.field_values[Y];\n                  if (y_coord > this.statistics.y.max)\n                    this.statistics.y.max = y_coord;\n                  if (y_coord < this.statistics.y.min)\n                    this.statistics.y.min = y_coord;\n                } else y_coord = this.prev_y;\n                this.instructions.addInstruction(\n                  this.byte_index,\n                  command,\n                  x_coord,\n                  y_coord\n                );\n                //this.line_index.push(this.byte_index);\n                this.prev_x = x_coord;\n                this.prev_y = y_coord;\n              }\n\n              // Set feed rate if F field is present\n              if (!isNaN(this.field_values[F])) {\n                this.feed_rate = this.field_values[F];\n                this.instructions.addInstruction(\n                  this.byte_index,\n                  COMMANDS.SET_FEED_RATE,\n                  this.field_values[F]\n                );\n                if (this.feed_rate > this.statistics.feed_rate.max)\n                  this.statistics.feed_rate.max = this.feed_rate;\n                if (this.feed_rate < this.statistics.feed_rate.min)\n                  this.statistics.feed_rate.min = this.feed_rate;\n                //this.line_index.push(this.byte_index);\n              }\n\n              if (!isNaN(this.field_values[Z])) {\n                if (this.field_values[Z] > this.prev_z) {\n                  this.instructions.addInstruction(\n                    this.byte_index,\n                    COMMANDS.RETRACTION\n                  );\n                  //this.line_index.push(this.byte_index);\n                }\n                this.prev_z = this.field_values[Z];\n              }\n\n              break;\n            case 90: // G90\n              this.axis_coordinates_absolute = true;\n              break;\n            case 91: // G91\n              this.axis_coordinates_absolute = false;\n              break;\n          }\n        }\n        // check if this is a G command\n        else if (!isNaN(this.field_values[M])) {\n          switch (this.field_values[M]) {\n            case 82:\n              this.extruder_coordinates_absolute = true;\n              break;\n            case 83:\n              this.extruder_coordinates_absolute = false;\n              break;\n          }\n        } else if (!isNaN(this.field_values[T])) {\n          this.instructions.addInstruction(\n            this.byte_index,\n            COMMANDS.TOOL_CHANGE,\n            this.field_values[T]\n          );\n          this.current_tool = this.field_values[T];\n          if (this.statistics.tools[this.current_tool] == undefined)\n            this.statistics.tools[this.current_tool] = { extrusion: 0 };\n        }\n\n        // reset all fields to NaN so that we don't use fields defined\n        // in previous commands if the current command does not have an optional\n        // field set\n        //\n        // this is faster than using \"field_values.fill(NaN)\" for some reason\n        for (let j = 0; j < 27; j++) {\n          this.field_values[j] = NaN;\n        }\n      } else if (c === CHAR_SEMICOLON) {\n        this.state = STATE_COMMENT;\n      }\n      this.prev_character = c;\n      this.byte_index += 1;\n    }\n    if (this.state === STATE_FIELD) {\n      this.last_block = data.slice(this.value_start);\n    }\n    //console.log((instruction_index * 4) / 1024 / 1024, instructions_f32);\n  }\n\n  pFloat(\n    data: Uint8Array,\n    data_start: number,\n    data_end: number,\n    dot_location: number\n  ) {\n    let result = 0;\n    let negative = false;\n\n    for (let i = data_start; i < data_end; ++i) {\n      let n = data[i] - 48;\n      if (i === data_start && data[i] === CHAR_MINUS) {\n        negative = true;\n      } else if (i < dot_location) {\n        result += n * LOOKUP_BEFORE_DOT[dot_location - i - 1];\n      } else if (i > dot_location)\n        result += n * LOOKUP_AFTER_DOT[i - dot_location - 1];\n    }\n    return negative ? -result : result;\n  }\n\n  getParsingResult() {\n    return {\n      instructions: this.instructions,\n      layerPositions: this.layer_positions,\n      layerHeights: this.layer_heights,\n      layerBytePositions: this.layer_byte_positions,\n      statistics: this.statistics,\n      lineIndex: [] //this.line_index\n    };\n  }\n}\n\nexport class Instructions {\n  blockSizeInInstructions: number;\n  buffers: ArrayBuffer[] = [];\n  currentBuffer = 0;\n  currentInstruction = 0;\n  currentFloat32Array: Float32Array;\n  totalInstructions = 0;\n  lastByteIndex = 0;\n\n  constructor(blockSizeInInstructions: number) {\n    this.blockSizeInInstructions = blockSizeInInstructions;\n    this.buffers.push(new ArrayBuffer(this.blockSizeInInstructions * 3 * 4));\n    this.currentFloat32Array = new Float32Array(\n      this.buffers[this.currentBuffer]\n    );\n  }\n\n  addInstruction(\n    byte_index: number,\n    command: number,\n    param1?: number,\n    param2?: number\n  ) {\n    // the command is encoded in the first byte, the delta to the last\n    // byte index in the last three bytes.\n    const command_and_byte_index =\n      command | ((byte_index - this.lastByteIndex) << 8);\n    this.lastByteIndex = byte_index;\n\n    this.currentFloat32Array[\n      this.currentInstruction * 3\n    ] = command_and_byte_index;\n    if (param1 !== undefined)\n      this.currentFloat32Array[this.currentInstruction * 3 + 1] = param1;\n    if (param2 !== undefined)\n      this.currentFloat32Array[this.currentInstruction * 3 + 2] = param2;\n    this.currentInstruction += 1;\n    this.totalInstructions += 1;\n\n    if (this.currentInstruction >= this.blockSizeInInstructions) {\n      this.buffers.push(new ArrayBuffer(this.blockSizeInInstructions * 3 * 4));\n      this.currentBuffer += 1;\n      this.currentInstruction = 0;\n      this.currentFloat32Array = new Float32Array(\n        this.buffers[this.currentBuffer]\n      );\n    }\n  }\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { Instructions, COMMANDS, IStatistics } from \"app/gcode-parser\";\nimport { zoom } from \"d3-zoom\";\nimport { select, event } from \"d3-selection\";\nimport { scaleLinear } from \"d3-scale\";\nimport { interpolateInferno } from \"d3-scale-chromatic\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { IGCode, IDrawSettings } from \"app/UIStore\";\nimport { action } from \"mobx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { ResizeSensor } from \"@blueprintjs/core\";\n\nconst StyledCanvas = styled.canvas`\n  flex: 1;\n`;\n\nconst OverlayDiv = styled.div`\n  position: absolute;\n  padding: 5px;\n  background-color: transparent;\n`;\n\ninterface IProps {\n  currentLayer: number;\n  bytesToDraw?: number;\n  activeGCode: IGCode;\n  transform: ITransform;\n  setTransform: (newTransfrom: ITransform) => void;\n  drawSettings: IDrawSettings;\n}\n\nexport interface ITransform {\n  k: number;\n  x: number;\n  y: number;\n}\n\nconst GCodeViewer = observer(\n  ({\n    currentLayer,\n    bytesToDraw,\n    activeGCode,\n    transform,\n    setTransform,\n    drawSettings\n  }: IProps) => {\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(\n      null\n    );\n\n    let canvas = useRef<HTMLCanvasElement>(null);\n\n    const doZoom = action(\"update transform\", () => {\n      /*const { k, x, y } = event.transform;\n      set(transform, \"x\", x);\n      set(transform, \"y\", y);\n      set(transform, \"k\", k);\n      transform.x = x;\n      transform.y = y;\n      transform.k = k;*/\n      //transform = { k, x, y };\n      setTransform(event.transform);\n    });\n\n    function draw() {\n      if (canvas.current === null || context === null || activeGCode === null) {\n        return;\n      }\n\n      clearCanvas(canvas.current, context);\n      drawInstructions(\n        context,\n        currentLayer,\n        bytesToDraw ? bytesToDraw : undefined,\n        activeGCode,\n        transform,\n        devicePixelRatio,\n        drawSettings,\n        activeGCode.statistics\n      );\n    }\n\n    function handleResize() {\n      if (canvas.current === null) return;\n\n      const currentHeight = canvas.current.clientHeight;\n      const currentWidth = canvas.current.clientWidth;\n      var devicePixelRatio = window.devicePixelRatio || 1;\n      if (\n        canvas.current.width !== currentWidth * devicePixelRatio ||\n        canvas.current.height !== currentHeight * devicePixelRatio\n      ) {\n        canvas.current.width = currentWidth * devicePixelRatio;\n        canvas.current.height = currentHeight * devicePixelRatio;\n      }\n      draw();\n    }\n\n    useEffect(() => {\n      if (context) {\n        draw();\n      } else {\n        if (canvas.current) setContext(canvas.current.getContext(\"2d\"));\n\n        const zoomBehaviour = zoom()\n          .on(\"zoom\", doZoom)\n          .scaleExtent([1, 128]);\n\n        if (canvas.current !== null)\n          zoomBehaviour(select(canvas.current as any));\n\n        //handleResize();\n      }\n    });\n\n    // hack to get mobx to notice we use this Observable\n    var tmp = drawSettings.lineWidth;\n    var tmp2 = drawSettings.coloringMode;\n    var tmp3 = drawSettings.scaleLinewidth;\n\n    return (\n      <ResizeSensor onResize={handleResize}>\n        <>\n          <OverlayDiv>\n            Layer {currentLayer}\n            <br />\n            Layer height: {activeGCode.layerHeights[currentLayer].toFixed(2)}\n          </OverlayDiv>\n          <StyledCanvas ref={canvas} />\n        </>\n      </ResizeSensor>\n    );\n  }\n);\nexport default GCodeViewer;\n\nfunction drawInstructions(\n  context: CanvasRenderingContext2D,\n  layer: number,\n  bytesToDraw: number | undefined,\n  activeGCode: IGCode,\n  transform: any,\n  devicePixelRatio: number,\n  drawSettings: IDrawSettings,\n  statistics: IStatistics\n) {\n  const instructions = activeGCode.instructions;\n\n  context.setTransform(\n    transform.k * devicePixelRatio,\n    0,\n    0,\n    transform.k * devicePixelRatio,\n    transform.x * devicePixelRatio,\n    transform.y * devicePixelRatio\n  );\n  if (drawSettings.scaleLinewidth) {\n    context.lineWidth = drawSettings.lineWidth / 50;\n  } else {\n    context.lineWidth = drawSettings.lineWidth / transform.k;\n  }\n\n  context.lineCap = \"round\";\n  drawLayer(\n    context,\n    instructions,\n    activeGCode.layerPositions[layer],\n    activeGCode.layerPositions[layer + 1],\n    drawSettings,\n    statistics,\n    undefined,\n    bytesToDraw\n  );\n}\n\nfunction drawLayer(\n  context: CanvasRenderingContext2D,\n  instructions: Instructions,\n  from: number,\n  to: number,\n  drawSettings: IDrawSettings,\n  statistics: IStatistics,\n  overrideColor: string | undefined,\n  bytesToDraw: number | undefined\n) {\n  let prevX = 0;\n  let prevY = 0;\n\n  const feedRateScale = scaleLinear()\n    .domain([\n      statistics.extruded_feed_rate.min,\n      statistics.extruded_feed_rate.max\n    ])\n    .range([0, 0.8]);\n  context.beginPath();\n\n  const firstBuffer = Math.floor(from / instructions.blockSizeInInstructions);\n  const lastBuffer = Math.floor(to / instructions.blockSizeInInstructions);\n\n  let currentF32Buffer;\n  let command;\n  let param1, param2;\n\n  let bytesDrawn = 0;\n\n  for (let i = firstBuffer; i <= lastBuffer; ++i) {\n    currentF32Buffer = new Float32Array(instructions.buffers[i]);\n\n    let offset = from - i * instructions.blockSizeInInstructions;\n    let end = to - i * instructions.blockSizeInInstructions;\n\n    for (let j = offset * 3; j < end * 3; j += 3) {\n      command = currentF32Buffer[j] & 255;\n      if (bytesToDraw !== undefined) {\n        bytesDrawn += (currentF32Buffer[j] & 4294967041) >> 8;\n        if (bytesDrawn > bytesToDraw) break;\n      }\n      param1 = currentF32Buffer[j + 1];\n      param2 = currentF32Buffer[j + 2];\n\n      switch (command) {\n        case COMMANDS.MOVE_WITHOUT_EXTRUSION:\n          context.moveTo(param1, param2);\n          prevX = param1;\n          prevY = param2;\n          break;\n        case COMMANDS.MOVE_WITH_EXTRUSION:\n          context.lineTo(param1, param2);\n          prevX = param1;\n          prevY = param2;\n          break;\n        case COMMANDS.SET_FEED_RATE:\n          if (drawSettings.coloringMode === \"feed_rate\") {\n            context.stroke();\n            context.beginPath();\n            context.moveTo(prevX, prevY);\n            context.strokeStyle = interpolateInferno(feedRateScale(param1));\n          }\n          break;\n        case COMMANDS.TOOL_CHANGE:\n          if (drawSettings.coloringMode === \"tool\") {\n            context.stroke();\n            context.beginPath();\n            context.moveTo(prevX, prevY);\n\n            var color = drawSettings.toolColors[param1];\n            if (color) {\n              context.strokeStyle = color;\n            } else context.strokeStyle = \"grey\";\n          }\n          break;\n      }\n    }\n  }\n  context.stroke();\n}\n\nfunction clearCanvas(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.restore();\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { UIStore, IGCode } from \"app/UIStore\";\nimport GCodeViewer from \"./GCodeViewer\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  UIStore: UIStore;\n}\n\nconst LiveGCodeViewer = observer(\n  ({\n    UIStore: { activeGCode, transform, setTransform, drawSettings }\n  }: IProps) => {\n    if (\n      activeGCode &&\n      activeGCode.connection &&\n      activeGCode.connection.progress\n    ) {\n      const layer = getLayerFromBytePosition(\n        activeGCode.connection.progress.filepos,\n        activeGCode.layerBytePositions\n      );\n\n      return (\n        <GCodeViewer\n          currentLayer={layer}\n          bytesToDraw={\n            activeGCode.connection.progress.filepos -\n            activeGCode.layerBytePositions[layer]\n          }\n          activeGCode={activeGCode}\n          transform={transform}\n          setTransform={setTransform}\n          drawSettings={drawSettings}\n        />\n      );\n    } else return <div>No GCode</div>;\n  }\n);\nexport default LiveGCodeViewer;\n\nfunction getLayerFromBytePosition(\n  bytePosition: number,\n  layerPositions: number[]\n) {\n  let rv = 0;\n  for (let i = 0; i < layerPositions.length; ++i) {\n    if (bytePosition >= layerPositions[i]) rv = i;\n  }\n  return rv;\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport GCodeParser from \"./gcode-parser\";\nimport { IGCode } from \"./UIStore\";\n\nexport function uploadGCodeFiles(files: FileList): Promise<IGCode> {\n  return new Promise((resolve, reject) => {\n    let file: File = files[0];\n    const reader = new FileReader();\n    let offset = 0;\n\n    const parser = new GCodeParser();\n    const t0 = performance.now();\n\n    function readSlice() {\n      let s = file.slice(offset, offset + 1024 * 1024);\n      reader.readAsArrayBuffer(s);\n    }\n\n    reader.onload = () => {\n      parser.parse(reader.result as ArrayBuffer);\n      offset += 1024 * 1024;\n      if (offset < file.size) readSlice();\n      else {\n        const delta = performance.now() - t0;\n        const fileSizeMB = file.size / 1024 / 1024;\n\n        console.log(\n          `Read ${fileSizeMB.toFixed(2)} megabytes in ${delta.toFixed(\n            0\n          )} ms. ${(delta / fileSizeMB).toFixed(0)} ms/megabyte ${(\n            1000 /\n            (delta / fileSizeMB)\n          ).toFixed(1)} megabyte/s`\n        );\n        const parsingResult = parser.getParsingResult();\n        resolve({\n          name: file.name,\n          numberOfLayers: parsingResult.layerPositions.length,\n          ...parsingResult\n        });\n      }\n    };\n    readSlice();\n  });\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from \"styled-components\";\nimport { uploadGCodeFiles } from \"app/file-upload\";\nimport UIStore from \"app/UIStore\";\n\nconst DropzoneContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  margin: 10px;\n  border-width: 4px;\n  border-radius: 2px;\n  border-color: #bbb;\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #666;\n  font-size: 300%;\n  font-weight: bold;\n`;\n\nconst CenteredParagraph = styled.p`\n  text-align: center;\n`;\n\ninterface IProps {\n  onFileLoad: () => void;\n}\n\nexport function GCodeDropzone({ onFileLoad }: IProps) {\n  const onDrop = useCallback(async acceptedFiles => {\n    UIStore.setActiveGCode(null);\n    const gcode = await uploadGCodeFiles(acceptedFiles);\n    UIStore.setActiveGCode(gcode);\n    if (onFileLoad) onFileLoad();\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <DropzoneContainer {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <CenteredParagraph>\n          Drag a G-Code file here\n          <br /> or <br /> click to select a file\n        </CenteredParagraph>\n      )}\n    </DropzoneContainer>\n  );\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { UIStore } from \"app/UIStore\";\nimport GCodeViewer from \"./GCodeViewer\";\nimport { observer } from \"mobx-react-lite\";\nimport { GCodeDropzone } from \"./GCodeDropzone\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  UIStore: UIStore;\n}\nconst StyledDiv = styled.div`\n  flex: 1;\n  display: flex;\n`;\n\nconst StaticGCodeViewer = observer(\n  ({\n    UIStore: { activeGCode, activeLayer, transform, setTransform, drawSettings }\n  }: IProps) => {\n    const [isDragging, setDragging] = useState<boolean>(false);\n\n    function handleDragOver(e: any) {\n      setDragging(true);\n    }\n\n    function handleDragLeave(e: any) {\n      setDragging(false);\n    }\n\n    if (activeGCode && !isDragging) {\n      return (\n        <StyledDiv onDragOver={handleDragOver} onDragLeave={handleDragLeave}>\n          <GCodeViewer\n            currentLayer={activeLayer}\n            activeGCode={activeGCode}\n            transform={transform}\n            setTransform={setTransform}\n            drawSettings={drawSettings}\n          />\n        </StyledDiv>\n      );\n    } else return <GCodeDropzone onFileLoad={() => setDragging(false)} />;\n  }\n);\nexport default StaticGCodeViewer;\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport {\n  Button,\n  Drawer,\n  Classes,\n  NumericInput,\n  FormGroup,\n  RadioGroup,\n  Radio,\n  Checkbox\n} from \"@blueprintjs/core\";\nimport { useState } from \"react\";\nimport { IDrawSettings } from \"app/UIStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { action } from \"mobx\";\n\ninterface IDrawSettingsButtonProps {\n  drawSettings: IDrawSettings;\n  setDrawSetting: (setting: keyof IDrawSettings, value: any) => void;\n}\n\nconst DrawSettingsButton = observer((props: IDrawSettingsButtonProps) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button\n        className=\"bp3-minimal\"\n        icon=\"cog\"\n        text=\"Draw settings\"\n        onClick={() => setOpen(true)}\n      />\n      <SettingsDrawer\n        isOpen={isOpen}\n        handleClose={() => setOpen(false)}\n        {...props}\n      />\n    </>\n  );\n});\nexport default DrawSettingsButton;\n\nconst SettingsDrawer = observer(\n  ({\n    isOpen,\n    handleClose,\n    ...props\n  }: {\n    isOpen: boolean;\n    handleClose: () => void;\n    drawSettings: IDrawSettings;\n    setDrawSetting: (setting: keyof IDrawSettings, value: any) => void;\n  }) => {\n    return (\n      <Drawer\n        isOpen={isOpen}\n        icon=\"cog\"\n        size=\"20%\"\n        hasBackdrop={false}\n        onClose={handleClose}\n        title=\"Draw Settings\"\n      >\n        <div className={Classes.DRAWER_BODY}>\n          <div className={Classes.DIALOG_BODY}>\n            <DrawSettings {...props} />\n          </div>\n        </div>\n      </Drawer>\n    );\n  }\n);\n\nconst DrawSettings = observer(({ drawSettings }: IDrawSettingsButtonProps) => {\n  return (\n    <div>\n      <FormGroup label=\"Linewidth\" labelFor=\"linewidth-input\">\n        <NumericInput\n          value={drawSettings.lineWidth}\n          id=\"linewidth-input\"\n          onValueChange={action(\n            \"set line width\",\n            (newValue: any) => (drawSettings.lineWidth = newValue)\n          )}\n        />\n      </FormGroup>\n      <Checkbox\n        checked={drawSettings.scaleLinewidth}\n        label=\"Scale linewidth with zoom\"\n        onChange={action(\n          \"set line width scaling\",\n          (newValue: any) =>\n            (drawSettings.scaleLinewidth = newValue.target.checked)\n        )}\n      />\n      <RadioGroup\n        label=\"Coloring mode\"\n        selectedValue={drawSettings.coloringMode}\n        onChange={action(\"set coloring mode\", (changeEvent: any) => {\n          drawSettings.coloringMode = changeEvent.target.value;\n        })}\n      >\n        <Radio label=\"by feed rate\" value=\"feed_rate\" />\n        <Radio label=\"by tool\" value=\"tool\" />\n      </RadioGroup>\n    </div>\n  );\n});\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Button, Dialog, Classes, HTMLTable } from \"@blueprintjs/core\";\r\nimport { IStatistics } from \"app/gcode-parser\";\r\n\r\n/* \r\nCopyright 2019 Fabian Hiller\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License. \r\n*/\r\n\r\nconst StatisticsModal = observer(\r\n  ({ statistics }: { statistics: IStatistics }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"bp3-minimal\"\r\n          text=\"Statistics\"\r\n          icon=\"timeline-bar-chart\"\r\n          onClick={() => setOpen(true)}\r\n        />\r\n        <Dialog\r\n          isOpen={isOpen}\r\n          icon=\"timeline-bar-chart\"\r\n          title=\"Statistics\"\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <div className={Classes.DIALOG_BODY}>\r\n            <h2>Dimensions</h2>\r\n            <p>\r\n              {(statistics.x.max - statistics.x.min).toFixed(2)}&nbsp;x&nbsp;\r\n              {(statistics.y.max - statistics.y.min).toFixed(2)}&nbsp;x&nbsp;\r\n              {(statistics.z.max - statistics.z.min).toFixed(2)}&nbsp;mm\r\n            </p>\r\n            <h2>Feed rate</h2>\r\n            <p>\r\n              {statistics.feed_rate.min.toFixed(0)} -{\" \"}\r\n              {statistics.feed_rate.max.toFixed(0)} feed rate\r\n            </p>\r\n            <p>\r\n              {statistics.extruded_feed_rate.min.toFixed(0)} -{\" \"}\r\n              {statistics.extruded_feed_rate.max.toFixed(0)} feed rate while\r\n              extruding\r\n            </p>\r\n            <h2>Tool overview</h2>\r\n            <ToolTable statistics={statistics} />\r\n          </div>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default StatisticsModal;\r\n\r\nfunction ToolTable({ statistics }: { statistics: IStatistics }) {\r\n  return (\r\n    <HTMLTable bordered={true} condensed={true}>\r\n      <thead>\r\n        <tr>\r\n          <th>tool</th>\r\n          <th>extrusion</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {statistics.tools.map((tool, index) => (\r\n          <tr>\r\n            <td>{index}</td>\r\n            <td>{tool.extrusion.toFixed(2)} mm</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </HTMLTable>\r\n  );\r\n}\r\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport { observable, action } from \"mobx\";\n\nexport default class OctoprintConnection {\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-37\n  private url: string;\n  private socket: WebSocket;\n  private domain: string;\n  private port: string;\n  private apikey: string;\n\n  @observable\n  status: string = \"\";\n\n  @observable\n  progress: IProgress | null = null;\n\n  constructor(domain: string, port: string, user: string, apikey: string) {\n    const serverId = Math.floor(Math.random() * 999 + 1);\n    const sessionId = this.generateSessionId();\n    this.domain = domain;\n    this.port = port;\n    this.url = `wss://${domain}:${port}/sockjs/${serverId}/${sessionId}/websocket`;\n    this.apikey = apikey;\n    console.log(\"Open websocket at \" + this.url);\n    this.socket = new WebSocket(this.url);\n    this.socket.onmessage = event => this.handleMessage(event);\n    this.socket.onopen = () => {\n      this.socket.send(`[\"{\\\\\"auth\\\\\":\\\\\"${user}:${apikey}\\\\\"}\"]`);\n    };\n  }\n\n  public getCurrentFile() {\n    if (this.progress && this.progress.path) {\n      return fetch(\n        `https://${this.domain}:${this.port}/downloads/files/local/${this.progress.path}`,\n        {\n          headers: {\n            \"X-Api-Key\": this.apikey\n          }\n        }\n      );\n    } else return null;\n  }\n\n  private generateSessionId() {\n    let sessionId = \"\";\n    var chars =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 16; i++)\n      sessionId += chars.charAt(Math.floor(Math.random() * chars.length));\n\n    return sessionId;\n  }\n\n  @action\n  private updateStatus(newStatus: string) {\n    this.status = newStatus;\n  }\n\n  @action\n  private updateProgress(newProgress: IProgress, newJob: any) {\n    if (newProgress.filepos !== null) {\n      this.progress = {\n        completion: newProgress.completion,\n        filepos: newProgress.filepos,\n        filename: newJob.file.name,\n        path: newJob.file.origin === \"local\" ? newJob.file.path : null\n      };\n    } else this.progress = null;\n  }\n\n  private handleMessage(event: MessageEvent) {\n    // console.log(\"E\", event.data);\n    if (event.data.startsWith(\"a\")) {\n      var payload = JSON.parse(event.data.slice(1));\n      //console.log(payload);\n      if (payload.length === 1 && payload[0].current) {\n        const data = payload[0].current;\n\n        this.updateStatus(data.state.text);\n        this.updateProgress(data.progress, data.job);\n      }\n    }\n  }\n}\n\ninterface IProgress {\n  completion: number;\n  filepos: number;\n  filename: string;\n  path: string | null;\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport {\n  observable,\n  action,\n  computed,\n  reaction,\n  autorun,\n  IReactionPublic\n} from \"mobx\";\nimport OctoprintConnection from \"./OctoprintConnection\";\n\nclass OctoprintStore {\n  constructor() {\n    this.servers = this.restore(\"octoprint_servers\", []).map((x: any) => ({\n      config: x\n    }));\n    autorun(reaction => {\n      this.servers = this.servers.map(({ config }) => ({\n        config: config,\n        connection: new OctoprintConnection(\n          config.hostname,\n          config.port,\n          config.user,\n          config.apikey\n        )\n      }));\n    });\n  }\n  @observable\n  servers: IOctoprintServer[] = [];\n\n  @action\n  addServer(server: IOctoprintConfig) {\n    this.servers.push({ config: server, connection: null });\n    this.save();\n  }\n\n  private save() {\n    window.localStorage.setItem(\n      \"octoprint_servers\",\n      JSON.stringify(this.servers.map(x => x.config))\n    );\n  }\n  private restore(key: string, defaultValue: any) {\n    const savedValue = window.localStorage.getItem(key);\n    return savedValue !== null ? JSON.parse(savedValue) : defaultValue;\n  }\n}\n\nconst store = new OctoprintStore();\nexport default store;\n\nexport interface IOctoprintServer {\n  config: IOctoprintConfig;\n  connection: OctoprintConnection | null;\n}\n\nexport interface IOctoprintConfig {\n  name: string;\n  hostname: string;\n  port: string;\n  user: string;\n  apikey: string;\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport OctoprintStore from \"app/OctoprintStore\";\nimport { Formik, Form, Field, FieldProps, ErrorMessage } from \"formik\";\nimport {\n  Dialog,\n  Button,\n  Classes,\n  FormGroup,\n  InputGroup,\n  Callout\n} from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Machine, interpret } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport { useState } from \"react\";\n\ninterface IProps {}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nconst StyledCallout = styled(Callout)`\n  margin-bottom: 15px;\n`;\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .max(40, \"Too Long!\")\n    .required(\"Required\"),\n  hostname: Yup.string().required(\"Required\"),\n  port: Yup.number()\n    .integer(\"Invalid port number\")\n    .required(\"Required\"),\n  user: Yup.string().required(\"Required\")\n});\n\nconst octoprintAddMachine = Machine({\n  id: \"octoprint-add\",\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        CONNECT: \"connecting\"\n      }\n    },\n    connecting: {\n      on: {\n        CONNECTION_SUCCESS: \"polling_for_auth\",\n        CONNECTION_FAILURE: \"connection_failed\"\n      }\n    },\n    polling_for_auth: {\n      on: {\n        AUTH_REQUEST_ACCEPTED: \"auth_successful\",\n        AUTH_REQUEST_DENIED: \"auth_failed\"\n      }\n    },\n    connection_failed: {\n      on: {\n        CONNECT: \"connecting\"\n      }\n    },\n    auth_successful: {\n      on: {\n        RESET: \"idle\"\n      }\n    },\n    auth_failed: {\n      on: {\n        CONNECT: \"connecting\"\n      }\n    }\n  }\n});\n\nasync function connectToOctoprint(hostname: string, port: string) {\n  try {\n    const response = await fetch(\n      `https://${hostname}:${port}/plugin/appkeys/probe`\n    );\n    return response.status === 204;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function pollingForAuth(hostname: string, port: string) {\n  const response = await fetch(\n    `https://${hostname}:${port}/plugin/appkeys/request`,\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        app: \"G-Code viewer\"\n      })\n    }\n  );\n  const app_token = (await response.json()).app_token;\n  while (true) {\n    const pollResponse = await fetch(\n      `https://${hostname}:${port}/plugin/appkeys/request/` + app_token\n    );\n    if (pollResponse.status === 200) {\n      const body = await pollResponse.json();\n      return body.api_key;\n    }\n    if (pollResponse.status === 404) {\n      return null;\n    }\n    await new Promise(resolve => setTimeout(resolve, 1000));\n  }\n}\n\nconst OctoprintAddDialog = observer(() => {\n  const [isOpen, setOpen] = useState(false);\n\n  const [currentState, send] = useMachine(octoprintAddMachine);\n\n  return (\n    <>\n      <Button\n        className=\"bp3-minimal\"\n        icon=\"cloud-download\"\n        text=\"Octoprint\"\n        onClick={() => setOpen(true)}\n      />\n      <Dialog\n        isOpen={isOpen}\n        icon=\"cloud-download\"\n        title=\"Add Octoprint server\"\n        onClose={() => {\n          setOpen(false);\n          send(\"RESET\");\n        }}\n      >\n        <Formik\n          initialValues={{\n            name: \"Test\",\n            hostname: \"localhost\",\n            port: \"5000\",\n            user: \"\"\n          }}\n          onSubmit={async values => {\n            send(\"CONNECT\");\n            const x = await connectToOctoprint(values.hostname, values.port);\n            if (x) {\n              send(\"CONNECTION_SUCCESS\");\n              const apikey = await pollingForAuth(values.hostname, values.port);\n\n              if (apikey) {\n                const server = { apikey: apikey, ...values };\n                OctoprintStore.addServer(server);\n                send(\"AUTH_REQUEST_ACCEPTED\");\n              } else {\n                send(\"AUTH_REQUEST_DENIED\");\n              }\n            } else {\n              send(\"CONNECTION_FAILURE\");\n            }\n            //setOpen(false);\n          }}\n          validationSchema={ValidationSchema}\n          render={() => (\n            <Form>\n              <div className={Classes.DIALOG_BODY}>\n                <StyledCallout>\n                  <p>\n                    Add an Octoprint server to monitor print progress. The\n                    Octoprint server must have the CORS setting disabled and\n                    must be reachable from the client runnig this web\n                    application in the browser.\n                  </p>\n                </StyledCallout>\n                <TextField\n                  label=\"Name\"\n                  name=\"name\"\n                  disabled={!currentState.matches(\"idle\")}\n                />\n                <TextField\n                  label=\"Hostname or IP address\"\n                  name=\"hostname\"\n                  disabled={!currentState.matches(\"idle\")}\n                />\n                <TextField\n                  label=\"Port\"\n                  name=\"port\"\n                  disabled={!currentState.matches(\"idle\")}\n                />\n                <TextField\n                  label=\"Username\"\n                  name=\"user\"\n                  disabled={!currentState.matches(\"idle\")}\n                />\n              </div>\n              <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                  {currentState.matches(\"idle\") && (\n                    <>\n                      <Button type=\"submit\" intent=\"success\">\n                        Requestion authentication from Octoprint\n                      </Button>\n                      <Button onClick={() => setOpen(false)}>Cancel</Button>\n                    </>\n                  )}\n                  {currentState.matches(\"connecting\") && (\n                    <Callout intent=\"primary\">\n                      Connecting to Octoprint server\n                    </Callout>\n                  )}\n                  {currentState.matches(\"polling_for_auth\") && (\n                    <Callout intent=\"primary\">\n                      Waiting for authorization. Open Octoprint and approve the\n                      authorization request to continue.\n                    </Callout>\n                  )}\n                  {currentState.matches(\"auth_successful\") && (\n                    <Callout intent=\"success\">\n                      Successfully added Octoprint server.\n                    </Callout>\n                  )}\n                  {currentState.matches(\"auth_failed\") && (\n                    <Callout intent=\"danger\">Authorization was denied.</Callout>\n                  )}\n                  {currentState.matches(\"connection_failed\") && (\n                    <>\n                      <Callout intent=\"danger\">\n                        Error connecting to Octoprint. Make sure the hostname\n                        and port are correct and that CORS is disabled.\n                      </Callout>\n                      <Button type=\"submit\" intent=\"success\">\n                        Retry\n                      </Button>\n                    </>\n                  )}\n                </div>\n              </div>\n            </Form>\n          )}\n        />\n      </Dialog>\n    </>\n  );\n});\nexport default OctoprintAddDialog;\n\nconst StyledDangerCallout = styled(Callout)`\n  margin-top: 5px;\n`;\n\nconst CustomInputComponent = ({\n  field // { name, value, onChange, onBlur }\n}: FieldProps) => (\n  <>\n    <InputGroup type=\"text\" {...field} />\n    <ErrorMessage name={field.name}>\n      {error => (\n        <StyledDangerCallout intent=\"danger\" className=\"error\">\n          {error}\n        </StyledDangerCallout>\n      )}\n    </ErrorMessage>\n  </>\n);\n\nconst TextField = ({\n  label,\n  name,\n  disabled\n}: {\n  label: string;\n  name: string;\n  disabled?: boolean;\n}) => (\n  <FormGroup label={label} labelFor={`${name}-input`}>\n    <Field\n      id={`${name}-input`}\n      name={name}\n      component={CustomInputComponent}\n      disabled={disabled}\n    />\n  </FormGroup>\n);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport OctoprintStore, { IOctoprintServer } from \"app/OctoprintStore\";\nimport { Card, Button } from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\nimport OctoprintConnection from \"app/OctoprintConnection\";\nimport UIStore from \"app/UIStore\";\nimport GCodeParser from \"app/gcode-parser\";\n\ninterface IProps {}\n\nconst StyledCard = styled(Card)`\n  padding: 5px;\n`;\n\nconst OverviewContainer = styled.div`\n  position: absolute;\n  right: 15px;\n  top: 65px;\n`;\n\nasync function handlePreview(connection: OctoprintConnection) {\n  const t0 = performance.now();\n  const response = await connection.getCurrentFile();\n  if (response && response.body && response.status === 200) {\n    const parser = new GCodeParser();\n    let bytesReceived = 0;\n    const reader = response.body.getReader();\n    while (true) {\n      let result = await reader.read();\n\n      if (result.done) break;\n      parser.parse(result.value as ArrayBuffer);\n      bytesReceived += result.value.length;\n    }\n    const delta = performance.now() - t0;\n    const fileSizeMB = bytesReceived / 1024 / 1024;\n    console.log(\n      `Read ${fileSizeMB.toFixed(2)} megabytes in ${delta.toFixed(0)} ms. ${(\n        delta / fileSizeMB\n      ).toFixed(0)} ms/megabyte`\n    );\n    const parsingResult = parser.getParsingResult();\n    UIStore.setActiveGCode({\n      name: \"test\",\n      numberOfLayers: parsingResult.layerPositions.length,\n      connection: connection,\n      live: true,\n      ...parsingResult\n    });\n  }\n}\n\nconst OctoprintOverview = observer(() => {\n  return (\n    <OverviewContainer>\n      {OctoprintStore.servers.map(({ config, connection }, index) => (\n        <StyledCard key={index}>\n          <p>{config.name}</p>\n          {connection ? <p>{connection.status}</p> : <p>unknown</p>}\n          {connection && connection.progress ? (\n            <>\n              <p>Completion: {connection.progress.completion.toFixed(0)}</p>\n              <Button\n                intent=\"success\"\n                onClick={() => handlePreview(connection)}\n              >\n                Live preview\n              </Button>\n            </>\n          ) : null}\n        </StyledCard>\n      ))}\n    </OverviewContainer>\n  );\n});\nexport default OctoprintOverview;\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport { FocusStyleManager } from \"@blueprintjs/core\";\n\nimport \"normalize.css/normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nimport * as React from \"react\";\nimport { FormGroup, Navbar, Alignment } from \"@blueprintjs/core\";\n\nimport styled from \"styled-components\";\nimport { Slider } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react-lite\";\nimport UIStore from \"app/UIStore\";\n\nimport LiveGCodeViewer from \"./LiveGCodeViewer\";\nimport StaticGCodeViewer from \"./StaticGCodeViewer\";\nimport DrawSettingsButton from \"./DrawSettings\";\n\nimport Statistics from \"./Statistics\";\nimport OctoprintAddDialog from \"./octoprint/OctoprintAddDialog\";\nimport OctoprintOverview from \"./octoprint/OctoprintOverview\";\n\n// See https://blueprintjs.com/docs/#core/accessibility.focus-management\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst GridContainer = styled.div`\n  background: #eee;\n  display: grid;\n  grid-template-columns: 200px minmax(0, 1fr);\n  grid-template-rows: auto minmax(0, 1fr) auto;\n  width: 100vw;\n  height: 100vh;\n  align-self: stretch;\n  overflow: hidden;\n`;\n\nconst TopbarContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 1;\n  gap: 0;\n`;\n\nconst ViewerContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 2;\n  background: white;\n  display: flex;\n`;\n\nconst ToolContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 3;\n  padding: 0 20px 0 20px;\n`;\n\ninterface IProps {}\n\nconst App = observer(IProps => {\n  return (\n    //<React.StrictMode>\n    <GridContainer>\n      <TopbarContainer>\n        <Navbar className=\"bp3-dark\">\n          <Navbar.Group align={Alignment.LEFT}>\n            <Navbar.Heading>G-Code viewer for 3D printing</Navbar.Heading>\n            <Navbar.Divider />\n\n            <DrawSettingsButton\n              drawSettings={UIStore.drawSettings}\n              setDrawSetting={UIStore.setDrawSetting}\n            />\n            <OctoprintAddDialog />\n            {UIStore.activeGCode && (\n              <Statistics statistics={UIStore.activeGCode.statistics} />\n            )}\n          </Navbar.Group>\n        </Navbar>\n      </TopbarContainer>\n\n      <ViewerContainer>\n        {UIStore.activeGCode && UIStore.activeGCode.live ? (\n          <LiveGCodeViewer UIStore={UIStore} />\n        ) : (\n          <StaticGCodeViewer UIStore={UIStore} />\n        )}\n        <OctoprintOverview />\n      </ViewerContainer>\n      {UIStore.activeGCode && !UIStore.activeGCode.live ? (\n        <ToolContainer>\n          <FormGroup label=\"Current layer\">\n            <Slider\n              value={UIStore.activeLayer}\n              min={0}\n              max={\n                UIStore.numberOfLayers !== 0 ? UIStore.numberOfLayers - 2 : 100\n              }\n              disabled={UIStore.numberOfLayers === 0}\n              labelStepSize={Math.ceil(1 + UIStore.numberOfLayers / 200) * 10}\n              onChange={n => UIStore.setActiveLayer(n)}\n            />\n          </FormGroup>\n        </ToolContainer>\n      ) : null}\n    </GridContainer>\n    //</React.StrictMode>\n  );\n});\nexport default App;\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}