{"version":3,"sources":["app/UIStore.ts","app/gcode-parser.ts","components/GCodeViewer.tsx","components/LiveGCodeViewer.tsx","app/file-upload.ts","components/GCodeDropzone.tsx","components/StaticGCodeViewer.tsx","components/DrawSettings.tsx","components/App.tsx","index.tsx"],"names":["store","_dec","action","bound","_dec2","_dec3","observable","ref","_class","UIStore","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","createClass","key","value","setting","drawSettings","n","activeLayer","newTransform","transform","gcode","activeGCode","get","numberOfLayers","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","k","x","y","lineWidth","coloringMode","toolColors","getOwnPropertyDescriptor","computed","STATE_NONE","CHAR_0","charCodeAt","CHAR_9","CHAR_DOT","CHAR_MINUS","CHAR_SPACE","CHAR_TAB","CHAR_A","CHAR_Z","CHAR_LF","CHAR_CR","CHAR_SEMICOLON","COMMANDS","MOVE_WITH_EXTRUSION","MOVE_WITHOUT_EXTRUSION","SET_FEED_RATE","RETRACTION","LAYER_CHANGE","TOOL_CHANGE","INSTRUCTION_ARRAY_BLOCK_SIZE","LOOKUP_BEFORE_DOT","LOOKUP_AFTER_DOT","GCodeParser","state","field","value_start","dot_position","prev_character","field_values","Float32Array","axis_coordinates_absolute","extruder_coordinates_absolute","feed_rate","current_tool","prev_z","last_z_with_extrusion","last_feed_rate_with_extrusion","current_layer_index","layer_positions","prev_x","prev_y","prev_e","instructions","Instructions","byte_index","last_block","statistics","min","Infinity","max","extruded_feed_rate","fill","NaN","gcodeArrayBuffer","c","data","Uint8Array","i","length","undefined","temp_data","Array","from","concat","slice","temp_dot_position","j","pFloat","isNaN","addInstruction","command","x_coord","y_coord","push","totalInstructions","data_start","data_end","dot_location","result","negative","layerPositions","lineIndex","blockSizeInInstructions","buffers","currentBuffer","currentInstruction","currentFloat32Array","ArrayBuffer","param1","param2","StyledCanvas","styled","canvas","_templateObject","GCodeViewer","observer","_ref","to","setTransform","_useState","useState","_useState2","slicedToArray","context","setContext","useRef","doZoom","event","draw","current","save","clearRect","width","height","restore","clearCanvas","devicePixelRatio","feedRateScale","scaleLinear","domain","range","prevX","prevY","lineCap","beginPath","currentF32Buffer","firstBuffer","Math","floor","lastBuffer","offset","end","moveTo","lineTo","stroke","strokeStyle","interpolateInferno","color","drawInstructions","useEffect","getContext","zoomBehaviour","zoom","on","scaleExtent","select","react","resizeSensor","onResize","currentHeight","clientHeight","currentWidth","clientWidth","window","LiveGCodeViewer","_ref$UIStore","connection","progress","currentLine","bytepos","getLineByBytePos","filepos","findLayerByLine","components_GCodeViewer","uploadGCodeFiles","files","Promise","resolve","reject","file","reader","FileReader","parser","t0","performance","now","readSlice","s","readAsArrayBuffer","onload","parse","size","delta","fileSizeMB","console","log","toFixed","parsingResult","getParsingResult","objectSpread","name","DropzoneContainer","div","GCodeDropzone_templateObject","GCodeDropzone","onFileLoad","onDrop","useCallback","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","acceptedFiles","wrap","_context","prev","next","setActiveGCode","sent","stop","_x","apply","arguments","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","react_default","createElement","StyledDiv","StaticGCodeViewer_templateObject","StaticGCodeViewer","isDragging","setDragging","onDragOver","e","onDragLeave","DrawSettingsButton","props","isOpen","setOpen","buttons","className","icon","text","onClick","SettingsDrawer","assign","handleClose","objectWithoutProperties","drawer","hasBackdrop","onClose","title","Classes","DRAWER_BODY","DIALOG_BODY","DrawSettings_DrawSettings","DrawSettings","setDrawSetting","formGroup","label","labelFor","numericInput","id","onValueChange","newValue","radioGroup","selectedValue","onChange","changeEvent","target","controls","FocusStyleManager","onlyShowFocusOnTabs","GridContainer","App_templateObject","TopbarContainer","_templateObject2","ViewerContainer","_templateObject3","ToolContainer","_templateObject4","App","IProps","navbar","Group","align","Alignment","LEFT","Heading","Divider","trackProgress","components_LiveGCodeViewer","components_StaticGCodeViewer","slider","disabled","labelStepSize","ceil","setActiveLayer","ReactDOM","components_App","document","getElementById"],"mappings":"gTA4EeA,EADD,IAtDdC,EAiBGC,IAAOC,MAjBVC,EAgCGF,IAAOC,MAhCVE,EAkDGC,IAAWC,IAlDdC,EAAA,oBAAAC,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAA,YAAAE,EAAAF,MAAAF,OAAAG,EAAA,EAAAH,CAAAE,KAAA,cAAAG,EAAAH,MAAAF,OAAAG,EAAA,EAAAH,CAAAE,KAAA,gBAAAI,EAAAJ,MAAAF,OAAAG,EAAA,EAAAH,CAAAE,KAAA,eAAAK,EAAAL,MAAAF,OAAAG,EAAA,EAAAH,CAAAE,KAAA,cAAAM,EAAAN,MAAA,OAAAF,OAAAS,EAAA,EAAAT,CAAAD,EAAA,EAAAW,IAAA,iBAAAC,MAAA,SAkBiBC,EAA8BD,GAC3CT,KAAKW,aAAaD,GAAWD,IAnBjC,CAAAD,IAAA,iBAAAC,MAAA,SA4BiBG,GACbZ,KAAKa,YAAcD,IA7BvB,CAAAJ,IAAA,eAAAC,MAAA,SAiCeK,GACXd,KAAKe,UAAYD,IAlCrB,CAAAN,IAAA,iBAAAC,MAAA,SAsCiBO,GAQbhB,KAAKiB,YAAcD,EACnBhB,KAAKa,YAAc,IA/CvB,CAAAL,IAAA,iBAAAU,IAAA,WAwBI,OAA4B,OAArBlB,KAAKiB,YAAuB,EAAIjB,KAAKiB,YAAYE,mBAxB5DtB,EAAA,GAAAK,EAAAJ,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,aACG3B,KADH,CAAA4B,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAE0B,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,MAF3CzB,EAAAL,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,eAIG3B,KAJH,CAAA4B,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAKwB,KALxBrB,EAAAN,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,iBAOG3B,KAPH,CAAA4B,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAQ2B,KAR3BpB,EAAAP,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,gBAUG3B,KAVH,CAAA4B,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAWgC,CAC5BI,UAAW,EACXC,aAAc,YACdC,WAAY,CAAC,OAAQ,QAAS,MAAO,SAAU,aAdnDjC,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,kBAAAhC,GAAAS,OAAAkC,yBAAApC,EAAAyB,UAAA,kBAAAzB,EAAAyB,WAAAvB,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,kBAsBGY,KAtBHnC,OAAAkC,yBAAApC,EAAAyB,UAAA,kBAAAzB,EAAAyB,WAAAvB,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,kBA2BG/B,KA3BHQ,OAAAkC,yBAAApC,EAAAyB,UAAA,kBAAAzB,EAAAyB,WAAAvB,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,gBAAA7B,GAAAM,OAAAkC,yBAAApC,EAAAyB,UAAA,gBAAAzB,EAAAyB,WAAAvB,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,kBAqCG/B,KArCHQ,OAAAkC,yBAAApC,EAAAyB,UAAA,kBAAAzB,EAAAyB,WAAAf,EAAAR,OAAAsB,EAAA,EAAAtB,CAAAF,EAAAyB,UAAA,eAAA5B,GAAA,CAAA6B,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAmD+B,QAnD/B7B,WCMMsC,EAAa,EAabC,EAAS,IAAIC,WAAW,GACxBC,EAAS,IAAID,WAAW,GACxBE,EAAW,IAAIF,WAAW,GAC1BG,EAAa,IAAIH,WAAW,GAC5BI,EAAa,IAAIJ,WAAW,GAC5BK,EAAW,KAAKL,WAAW,GAC3BM,EAAS,IAAIN,WAAW,GACxBO,EAAS,IAAIP,WAAW,GACxBQ,EAAU,KAAKR,WAAW,GAC1BS,EAAU,KAAKT,WAAW,GAC1BU,EAAiB,IAAIV,WAAW,GAEzBW,EAAW,CACtBC,oBAAqB,EACrBC,uBAAwB,EACxBC,cAAe,EACfC,WAAY,EACZC,aAAc,EACdC,YAAa,GAGTC,EAA+B,MAE/BC,EAAoB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQ,KACtDC,EAAmB,CAAC,GAAK,IAAM,KAAO,KAAQ,KAAS,MAExCC,aA+BnB,SAAAA,IAAe3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,GAAAzD,KA9Bf0D,MAAQxB,EA8BMlC,KA7Bd2D,MAAgB,EA6BF3D,KA5Bd4D,iBA4Bc,EAAA5D,KA3Bd6D,kBA2Bc,EAAA7D,KA1Bd8D,oBA0Bc,EAAA9D,KAzBd+D,aAAe,IAAIC,aAAa,IAyBlBhE,KAvBdiE,2BAA4B,EAuBdjE,KAtBdkE,+BAAgC,EAsBlBlE,KArBdmE,UAAY,EAqBEnE,KApBdoE,aAAe,EAoBDpE,KAjBdqE,OAAiB,EAiBHrE,KAhBdsE,2BAgBc,EAAAtE,KAfduE,mCAec,EAAAvE,KAddwE,oBAAsB,EAcRxE,KAbdyE,gBAA4B,GAadzE,KAXd0E,OAAS,EAWK1E,KAVd2E,OAAS,EAUK3E,KATd4E,OAAS,EASK5E,KAPd6E,aAAe,IAAIC,EAAaxB,GAOlBtD,KALd+E,WAAa,EAKC/E,KAFdgF,gBAEc,EAAAhF,KAIdiF,WAAa,CACXtD,EAAG,CACDuD,IAAKC,IACLC,KAAMD,KAERvD,EAAG,CACDsD,IAAKC,IACLC,KAAMD,KAERhB,UAAW,CACTe,IAAKC,IACLC,KAAMD,KAERE,mBAAoB,CAClBH,IAAKC,IACLC,KAAMD,MAlBRnF,KAAK+D,aAAauB,KAAKC,uDAsBnBC,GAIJ,IAHA,IACIC,EADEC,EAAO,IAAIC,WAAWH,GAGnBI,EAAI,EAAGA,EAAIF,EAAKG,SAAUD,EAAG,CAEpC,IADAH,EAAIC,EAAKE,KACCzD,GAAUsD,GAAKpD,GAAWoD,IAAMnD,GAAYmD,IAAMlD,EAItDkD,IAAMnD,IAAUtC,KAAK6D,aAAe+B,QACnC,GAAIH,IAAMjD,GAAciD,IAAMhD,GACnC,GAxGY,IAwGRzC,KAAK0D,OAAyB1D,KAAK4D,YAAa,CAClD,QAAwBkC,IAApB9F,KAAKgF,WAA0B,CAMjC,IAJA,IAAMe,EAAY,IAAIJ,WACpBK,MAAMC,KAAKjG,KAAKgF,YAAYkB,OAAOF,MAAMC,KAAKP,EAAKS,MAAM,EAAGP,MAE1DQ,EAAoBL,EAAUF,OACzBQ,EAAI,EAAGA,EAAIN,EAAUF,SAAUQ,EAClCN,EAAUM,KAAO/D,IAAU8D,EAAoBC,GAErDrG,KAAK+D,aAAa/D,KAAK2D,MAAQ,IAAM3D,KAAKsG,OACxCP,EACA,EACAA,EAAUF,OACVO,GAEFpG,KAAKgF,gBAAac,OAGlB9F,KAAK+D,aAAa/D,KAAK2D,MAAQ,IAAM3D,KAAKsG,OACxCZ,EACA1F,KAAK4D,YACLgC,EACA5F,KAAK6D,aAAe7D,KAAK6D,aAAe+B,GAG5C5F,KAAK4D,iBAAckC,EACnB9F,KAAK6D,kBAAeiC,EACpB9F,KAAK0D,MAAQxB,QAEV,GAAIuD,GAAK/C,GAAU+C,GAAK9C,EACzB3C,KAAK0D,QAAUxB,IACjBlC,KAAK2D,MAAQ+B,EAAKE,GAClB5F,KAAK0D,MAzIK,EA0IV1D,KAAK4D,YAAcgC,EAAI,QAGpB,GACJH,IAAM5C,GAAW4C,IAAM7C,GACvB5C,KAAK8D,iBAAmBjB,GAAW7C,KAAK8D,iBAAmBlB,EAiLnD6C,IAAM3C,IACf9C,KAAK0D,MAhUS,OA+Id,CAwBA,GAvBmB1D,KAAK4D,cACtB5D,KAAK+D,aAAa/D,KAAK2D,MAAQ,IAAM3D,KAAKsG,OACxCZ,EACA1F,KAAK4D,YACLgC,EACA5F,KAAK6D,aAAe7D,KAAK6D,aAAe+B,IAG5C5F,KAAK0D,MAAQxB,EACblC,KAAK4D,iBAAckC,EACnB9F,KAAK6D,kBAAeiC,EAafS,MAAMvG,KAAK+D,aAnKd,IAkSG,GAAKwC,MAAMvG,KAAK+D,aAjSnB,KA0SUwC,MAAMvG,KAAK+D,aAzSrB,OA0SA/D,KAAK6E,aAAa2B,eAChBzD,EAASM,YACTrD,KAAK+D,aA5SP,KA8SA/D,KAAKoE,aAAepE,KAAK+D,aA9SzB,UAiSA,OAAQ/D,KAAK+D,aAlSb,KAmSE,KAAK,GACH/D,KAAKkE,+BAAgC,EACrC,MACF,KAAK,GACHlE,KAAKkE,+BAAgC,OApIzC,OAAQlE,KAAK+D,aApKb,IAqKE,KAAK,EACL,KAAK,EAYD,IAAI0C,EACAC,EACAC,EAXN,IACGJ,MAAMvG,KAAK+D,aAvKlB,OAwKOwC,MAAMvG,KAAK+D,aAvKlB,MAmLSwC,MAAMvG,KAAK+D,aAzLpB,MA0LU/D,KAAKkE,+BACLlE,KAAK+D,aA3Lf,GA2LiC/D,KAAK4E,SAC1B5E,KAAKkE,+BACLlE,KAAK+D,aA7LjB,GA6LmC,IAEvB/D,KAAKqE,SAAWrE,KAAKsE,wBACvBtE,KAAK6E,aAAa2B,eAChBzD,EAASK,aACTpD,KAAKqE,QAGPrE,KAAKyE,gBAAgBmC,KACnB5G,KAAK6E,aAAagC,mBAEpB7G,KAAKwE,qBAAuB,EAK5BxE,KAAK6E,aAAa2B,eAChBzD,EAASE,uBACTjD,KAAK0E,OACL1E,KAAK2E,QAEP3E,KAAK6E,aAAa2B,eAChBzD,EAASG,cACTlD,KAAKmE,WAEPnE,KAAK6E,aAAa2B,eAChBzD,EAASM,YACTrD,KAAKoE,eAITqC,EAAU1D,EAASC,oBACnBhD,KAAKsE,sBAAwBtE,KAAKqE,OAC9BrE,KAAKmE,YAAcnE,KAAKuE,gCACtBvE,KAAKmE,UAAYnE,KAAKiF,WAAWI,mBAAmBD,MACtDpF,KAAKiF,WAAWI,mBAAmBD,IAAMpF,KAAKmE,WAC5CnE,KAAKmE,UAAYnE,KAAKiF,WAAWI,mBAAmBH,MACtDlF,KAAKiF,WAAWI,mBAAmBH,IAAMlF,KAAKmE,YAElDnE,KAAKuE,8BAAgCvE,KAAKmE,WAE1CsC,EAAU1D,EAASE,uBAIhBsD,MAAMvG,KAAK+D,aArOtB,KA6Oa2C,EAAU1G,KAAK0E,SANlBgC,EADE1G,KAAKiE,0BACGjE,KAAK+D,aAvOzB,IAwOuB/D,KAAK0E,OAAS1E,KAAK+D,aAxO1C,KAyOsB/D,KAAKiF,WAAWtD,EAAEyD,MAC9BpF,KAAKiF,WAAWtD,EAAEyD,IAAMsB,GACtBA,EAAU1G,KAAKiF,WAAWtD,EAAEuD,MAC9BlF,KAAKiF,WAAWtD,EAAEuD,IAAMwB,IAIvBH,MAAMvG,KAAK+D,aA/OtB,KAuPa4C,EAAU3G,KAAK2E,SANlBgC,EADE3G,KAAKiE,0BACGjE,KAAK+D,aAjPzB,IAkPuB/D,KAAK2E,OAAS3E,KAAK+D,aAlP1C,KAmPsB/D,KAAKiF,WAAWrD,EAAEwD,MAC9BpF,KAAKiF,WAAWrD,EAAEwD,IAAMuB,GACtBA,EAAU3G,KAAKiF,WAAWrD,EAAEsD,MAC9BlF,KAAKiF,WAAWrD,EAAEsD,IAAMyB,IAE5B3G,KAAK6E,aAAa2B,eAAeC,EAASC,EAASC,GAEnD3G,KAAK0E,OAASgC,EACd1G,KAAK2E,OAASgC,EAIXJ,MAAMvG,KAAK+D,aApQpB,MAqQM/D,KAAKmE,UAAYnE,KAAK+D,aArQ5B,GAsQM/D,KAAK6E,aAAa2B,eAChBzD,EAASG,cACTlD,KAAK+D,aAxQb,IA0QU/D,KAAKmE,UAAYnE,KAAKiF,WAAWd,UAAUiB,MAC7CpF,KAAKiF,WAAWd,UAAUiB,IAAMpF,KAAKmE,WACnCnE,KAAKmE,UAAYnE,KAAKiF,WAAWd,UAAUe,MAC7ClF,KAAKiF,WAAWd,UAAUe,IAAMlF,KAAKmE,YAIpCoC,MAAMvG,KAAK+D,aA3QpB,OA4QU/D,KAAK+D,aA5Qf,IA4QiC/D,KAAKqE,QAC9BrE,KAAK6E,aAAa2B,eAAezD,EAASI,YAG5CnD,KAAKqE,OAASrE,KAAK+D,aAhRzB,KAmRI,MACF,KAAK,GACH/D,KAAKiE,2BAA4B,EACjC,MACF,KAAK,GACHjE,KAAKiE,2BAA4B,EA2BvC,IAAK,IAAIoC,EAAI,EAAGA,EAAI,GAAIA,IACtBrG,KAAK+D,aAAasC,GAAKd,IAK3BvF,KAAK8D,eAAiB2B,EACtBzF,KAAK+E,YAAc,EApUL,IAsUZ/E,KAAK0D,QACP1D,KAAKgF,WAAaU,EAAKS,MAAMnG,KAAK4D,6CAMpC8B,EACAoB,EACAC,EACAC,GAKA,IAHA,IAAIC,EAAS,EACTC,GAAW,EAENtB,EAAIkB,EAAYlB,EAAImB,IAAYnB,EAAG,CAC1C,IAAIhF,EAAI8E,EAAKE,GAAK,GACdA,IAAMkB,GAAcpB,EAAKE,KAAOrD,EAClC2E,GAAW,EACFtB,EAAIoB,EACbC,GAAUrG,EAAI2C,EAAkByD,EAAepB,EAAI,GAC1CA,EAAIoB,IACbC,GAAUrG,EAAI4C,EAAiBoC,EAAIoB,EAAe,IAEtD,OAAOE,GAAYD,EAASA,6CAI5B,MAAO,CACLpC,aAAc7E,KAAK6E,aACnBsC,eAAgBnH,KAAKyE,gBACrBQ,WAAYjF,KAAKiF,WACjBmC,UAAW,aAKJtC,EAAb,WAQE,SAAAA,EAAYuC,GAAkCvH,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GAAA9E,KAP9CqH,6BAO6C,EAAArH,KAN7CsH,QAAyB,GAMoBtH,KAL7CuH,cAAgB,EAK6BvH,KAJ7CwH,mBAAqB,EAIwBxH,KAH7CyH,yBAG6C,EAAAzH,KAF7C6G,kBAAoB,EAGlB7G,KAAKqH,wBAA0BA,EAC/BrH,KAAKsH,QAAQV,KAAK,IAAIc,YAA2C,EAA/B1H,KAAKqH,wBAA8B,IACrErH,KAAKyH,oBAAsB,IAAIzD,aAC7BhE,KAAKsH,QAAQtH,KAAKuH,gBAZxB,OAAAzH,OAAAS,EAAA,EAAAT,CAAAgF,EAAA,EAAAtE,IAAA,iBAAAC,MAAA,SAgBiBgG,EAAiBkB,EAAiBC,GAC/C5H,KAAKyH,oBAA8C,EAA1BzH,KAAKwH,oBAA0Bf,OACzCX,IAAX6B,IACF3H,KAAKyH,oBAA8C,EAA1BzH,KAAKwH,mBAAyB,GAAKG,QAC/C7B,IAAX8B,IACF5H,KAAKyH,oBAA8C,EAA1BzH,KAAKwH,mBAAyB,GAAKI,GAC9D5H,KAAKwH,oBAAsB,EAC3BxH,KAAK6G,mBAAqB,EAEtB7G,KAAKwH,oBAAsBxH,KAAKqH,0BAClCrH,KAAKsH,QAAQV,KAAK,IAAIc,YAA2C,EAA/B1H,KAAKqH,wBAA8B,IACrErH,KAAKuH,eAAiB,EACtBvH,KAAKwH,mBAAqB,EAC1BxH,KAAKyH,oBAAsB,IAAIzD,aAC7BhE,KAAKsH,QAAQtH,KAAKuH,qBA9B1BzC,EAAA,6HC1WA,IAAM+C,GAAeC,IAAOC,OAAVC,KA4GHC,GAzFKC,YAClB,SAAAC,GAOc,IANZlC,EAMYkC,EANZlC,KACAmC,EAKYD,EALZC,GACAnH,EAIYkH,EAJZlH,YACAF,EAGYoH,EAHZpH,UACAsH,EAEYF,EAFZE,aACA1H,EACYwH,EADZxH,aACY2H,EACkBC,mBAC5B,MAFUC,EAAA1I,OAAA2I,EAAA,EAAA3I,CAAAwI,EAAA,GACLI,EADKF,EAAA,GACIG,EADJH,EAAA,GAKRT,EAASa,iBAA0B,MAEjCC,EAASvJ,YAAO,mBAAoB,WASxC+I,EAAaS,IAAM/H,aAGrB,SAASgI,IACgB,OAAnBhB,EAAOiB,SAAgC,OAAZN,GAAoC,OAAhBzH,IA6KzD,SACE8G,EACAW,GAEAA,EAAQO,OACRP,EAAQL,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCK,EAAQQ,UAAU,EAAG,EAAGnB,EAAOoB,MAAOpB,EAAOqB,QAC7CV,EAAQW,UAhLJC,CAAYvB,EAAOiB,QAASN,GA2DlC,SACEA,EACAzC,EACAmC,EACAvD,EACA9D,EACAwI,EACA5I,EACAsE,GAEA,IAAMuE,EAAgBC,cACnBC,OAAO,CACNzE,EAAWI,mBAAmBH,IAC9BD,EAAWI,mBAAmBD,MAE/BuE,MAAM,CAAC,EAAG,KAETC,EAAQ,EACRC,EAAQ,EAEZnB,EAAQL,aACNtH,EAAUW,EAAI6H,EACd,EACA,EACAxI,EAAUW,EAAI6H,EACdxI,EAAUY,EAAI4H,EACdxI,EAAUa,EAAI2H,GAEhBb,EAAQ7G,UAAYlB,EAAakB,UAAYd,EAAUW,EACvDgH,EAAQoB,QAAU,QAClBpB,EAAQqB,YASR,IAPA,IAGIC,EACAvD,EACAkB,EAAQC,EALNqC,EAAcC,KAAKC,MAAMlE,EAAOpB,EAAawC,yBAC7C+C,EAAaF,KAAKC,MAAM/B,EAAKvD,EAAawC,yBAMvCzB,EAAIqE,EAAarE,GAAKwE,IAAcxE,EAAG,CAC9CoE,EAAmB,IAAIhG,aAAaa,EAAayC,QAAQ1B,IAKzD,IAHA,IAAIyE,EAASpE,EAAOL,EAAIf,EAAawC,wBACjCiD,EAAMlC,EAAKxC,EAAIf,EAAawC,wBAEvBhB,EAAa,EAATgE,EAAYhE,EAAU,EAANiE,EAASjE,GAAK,EAKzC,OAJAI,EAAUuD,EAAiB3D,GAC3BsB,EAASqC,EAAiB3D,EAAI,GAC9BuB,EAASoC,EAAiB3D,EAAI,GAEtBI,GACN,KAAK1D,EAASE,uBACZyF,EAAQ6B,OAAO5C,EAAQC,GACvBgC,EAAQjC,EACRkC,EAAQjC,EACR,MACF,KAAK7E,EAASC,oBACZ0F,EAAQ8B,OAAO7C,EAAQC,GACvBgC,EAAQjC,EACRkC,EAAQjC,EACR,MACF,KAAK7E,EAASG,cACsB,cAA9BvC,EAAamB,eACf4G,EAAQ+B,SACR/B,EAAQqB,YACRrB,EAAQ6B,OAAOX,EAAOC,GACtBnB,EAAQgC,YAAcC,YAAmBnB,EAAc7B,KAEzD,MACF,KAAK5E,EAASM,YACZ,GAAkC,SAA9B1C,EAAamB,aAAyB,CACxC4G,EAAQ+B,SACR/B,EAAQqB,YACRrB,EAAQ6B,OAAOX,EAAOC,GAEtB,IAAIe,EAAQjK,EAAaoB,WAAW4F,GAElCe,EAAQgC,YADNE,GAEyB,SAMvClC,EAAQ+B,SA9IJI,CACEnC,EACAzC,EACAmC,EACAnH,EAAY4D,aACZ9D,EACAwI,iBACA5I,EACAM,EAAYgE,aAoBhB6F,oBAAU,WACR,GAAIpC,EACFK,QACK,CACDhB,EAAOiB,SAASL,EAAWZ,EAAOiB,QAAQ+B,WAAW,OAEzD,IAAMC,EAAgBC,cACnBC,GAAG,OAAQrC,GACXsC,YAAY,CAAC,EAAG,MAEI,OAAnBpD,EAAOiB,SACTgC,EAAcI,YAAOrD,EAAOiB,aAOxBrI,EAAakB,UACZlB,EAAamB,aAExB,OACEuJ,EAAA,cAACC,EAAA,EAAD,CAAcC,SAtChB,WACE,GAAuB,OAAnBxD,EAAOiB,QAAX,CAEA,IAAMwC,EAAgBzD,EAAOiB,QAAQyC,aAC/BC,EAAe3D,EAAOiB,QAAQ2C,YAChCpC,EAAmBqC,OAAOrC,kBAAoB,EAEhDxB,EAAOiB,QAAQG,QAAUuC,EAAenC,GACxCxB,EAAOiB,QAAQI,SAAWoC,EAAgBjC,IAE1CxB,EAAOiB,QAAQG,MAAQuC,EAAenC,EACtCxB,EAAOiB,QAAQI,OAASoC,EAAgBjC,GAE1CR,OA0BEsC,EAAA,cAACxD,GAAD,CAAclI,IAAKoI,OC3G3B,IAmCe8D,GAnCS3D,YACtB,SAAAC,GAEc,IAAA2D,EAAA3D,EADZtI,QAAWoB,EACC6K,EADD7K,YAAaF,EACZ+K,EADY/K,UAAWsH,EACvByD,EADuBzD,aAAc1H,EACrCmL,EADqCnL,aAEjD,GACEM,GACAA,EAAY8K,YACZ9K,EAAY8K,WAAWC,SACvB,CACA,IAAMC,EAqCZ,SAA0BC,EAAiBjL,GACzC,IAAK,IAAI2E,EAAI,EAAGA,EAAI3E,EAAYmG,UAAUvB,SAAUD,EAClD,GAAI3E,EAAYmG,UAAUxB,GAAKsG,EAC7B,OAAOtG,EAGX,OAAO3E,EAAYmG,UAAUvB,OA3CLsG,CAClBlL,EAAY8K,WAAWC,SAASI,QAChCnL,GAEIgF,EAwBZ,SAAyBkB,EAA0B8E,GACjD,IAAK,IAAIrG,EAAI,EAAGA,EAAIuB,EAAetB,SAAUD,EAC3C,GAAIuB,EAAevB,GAAKqG,EACtB,OAAO9E,EAAevB,EAAI,GAG9B,OAAOuB,EAAetB,OA9BLwG,CAAgBpL,EAAYkG,eAAgB8E,GACnD7D,EAAK6D,EAQX,OACEZ,EAAA,cAACiB,GAAD,CACErG,KAAMA,EACNmC,GAAIA,EACJnH,YAAaA,EACbF,UAAWA,EACXsH,aAAcA,EACd1H,aAAcA,IAGb,OAAO0K,EAAA,0FCtCX,SAASkB,GAAiBC,GAC/B,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAaJ,EAAM,GACjBK,EAAS,IAAIC,WACfzC,EAAS,EAEP0C,EAAS,IAAItJ,EACbuJ,EAAKC,YAAYC,MAEvB,SAASC,IACP,IAAIC,EAAIR,EAAKzG,MAAMkE,EAAQA,EAAS,SACpCwC,EAAOQ,kBAAkBD,GAG3BP,EAAOS,OAAS,WAGd,GAFAP,EAAOQ,MAAMV,EAAO5F,SACpBoD,GAAU,SACGuC,EAAKY,KAAML,QACnB,CACH,IAAMM,EAAQR,YAAYC,MAAQF,EAC5BU,EAAad,EAAKY,KAAO,KAAO,KAEtCG,QAAQC,IAAR,QAAA1H,OACUwH,EAAWG,QAAQ,GAD7B,kBAAA3H,OACgDuH,EAAMI,QAClD,GAFJ,SAAA3H,QAGYuH,EAAQC,GAAYG,QAAQ,GAHxC,iBAKA,IAAMC,EAAgBf,EAAOgB,mBAC7BrB,EAAQ5M,OAAAkO,GAAA,EAAAlO,CAAA,CACNmO,KAAMrB,EAAKqB,KACX9M,eAAgB2M,EAAc3G,eAAetB,QAC1CiI,MAITX,8UChCJ,IAAMe,GAAoBpG,IAAOqG,IAAVC,MAmBhB,SAASC,GAATlG,GAA+C,IAAtBmG,EAAsBnG,EAAtBmG,WACxBC,EAASC,sBAAW,eAAAC,EAAA3O,OAAA4O,GAAA,EAAA5O,CAAA6O,GAAAC,EAAAC,KAAC,SAAAC,EAAMC,GAAN,IAAA/N,EAAA,OAAA2N,GAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACzBtP,EAAQuP,eAAe,MADEH,EAAAE,KAAA,EAEL5C,GAAiBwC,GAFZ,OAEnB/N,EAFmBiO,EAAAI,KAGzBxP,EAAQuP,eAAepO,GACnBsN,GAAYA,IAJS,wBAAAW,EAAAK,SAAAR,MAAD,gBAAAS,GAAA,OAAAd,EAAAe,MAAAxP,KAAAyP,YAAA,GAKvB,IANiDC,EAOEC,aAAY,CAAEpB,WAA5DqB,EAP4CF,EAO5CE,aAAcC,EAP8BH,EAO9BG,cAAeC,EAPeJ,EAOfI,aAErC,OACEC,EAAAnB,EAAAoB,cAAC9B,GAAsB0B,IACrBG,EAAAnB,EAAAoB,cAAA,QAAWH,KACVC,EACCC,EAAAnB,EAAAoB,cAAA,oCAEAD,EAAAnB,EAAAoB,cAAA,4KC7BR,IAAMC,GAAYnI,IAAOqG,IAAV+B,MAmCAC,GA9BWjI,YACxB,SAAAC,GAEc,IAAA2D,EAAA3D,EADZtI,QAAWoB,EACC6K,EADD7K,YAAaJ,EACZiL,EADYjL,YAAaE,EACzB+K,EADyB/K,UAAWsH,EACpCyD,EADoCzD,aAAc1H,EAClDmL,EADkDnL,aAClD2H,EACsBC,oBAAkB,GADxCC,EAAA1I,OAAA2I,EAAA,EAAA3I,CAAAwI,EAAA,GACL8H,EADK5H,EAAA,GACO6H,EADP7H,EAAA,GAWZ,OAAIvH,IAAgBmP,EAEhB/E,EAAA,cAAC4E,GAAD,CAAWK,WAVf,SAAwBC,GACtBF,GAAY,IAS6BG,YAN3C,SAAyBD,GACvBF,GAAY,KAMRhF,EAAA,cAACiB,GAAD,CACErG,KAAMhF,EAAYkG,eAAetG,GACjCuH,GAAInH,EAAYkG,eAAetG,EAAc,GAC7CI,YAAaA,EACbF,UAAWA,EACXsH,aAAcA,EACd1H,aAAcA,KAIR0K,EAAA,cAACgD,GAAD,CAAeC,WAAY,kBAAM+B,GAAY,sECJhDI,GAnBYvI,YAAS,SAACwI,GAAoC,IAAApI,EAC7CC,oBAAS,GADoCC,EAAA1I,OAAA2I,EAAA,EAAA3I,CAAAwI,EAAA,GAChEqI,EADgEnI,EAAA,GACxDoI,EADwDpI,EAAA,GAGvE,OACE6C,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACwF,GAAA,EAAD,CACEC,UAAU,cACVC,KAAK,MACLC,KAAK,gBACLC,QAAS,kBAAML,GAAQ,MAEzBvF,EAAA,cAAC6F,GAADpR,OAAAqR,OAAA,CACER,OAAQA,EACRS,YAAa,kBAAMR,GAAQ,KACvBF,OAONQ,GAAiBhJ,YACrB,SAAAC,GASM,IARJwI,EAQIxI,EARJwI,OACAS,EAOIjJ,EAPJiJ,YACGV,EAMC5Q,OAAAuR,GAAA,EAAAvR,CAAAqI,EAAA,0BACJ,OACEkD,EAAA,cAACiG,GAAA,EAAD,CACEX,OAAQA,EACRI,KAAK,MACLvD,KAAK,MACL+D,aAAa,EACbC,QAASJ,EACTK,MAAM,iBAENpG,EAAA,qBAAKyF,UAAWY,KAAQC,aACtBtG,EAAA,qBAAKyF,UAAWY,KAAQE,aACtBvG,EAAA,cAACwG,GAAiBnB,QAQxBoB,GAAe5J,YACnB,SAAAuG,GAAgE,IAA7D9N,EAA6D8N,EAA7D9N,aAA6D8N,EAA/CsD,eACf,OACE1G,EAAA,yBACEA,EAAA,cAAC2G,EAAA,EAAD,CAAWC,MAAM,YAAYC,SAAS,mBACpC7G,EAAA,cAAC8G,GAAA,EAAD,CACE1R,MAAOE,EAAakB,UACpBuQ,GAAG,kBACHC,cAAe/S,YACb,iBACA,SAACgT,GAAD,OAAoB3R,EAAakB,UAAYyQ,OAInDjH,EAAA,cAACkH,GAAA,EAAD,CACEN,MAAM,gBACNO,cAAe7R,EAAamB,aAC5B2Q,SAAUnT,YAAO,oBAAqB,SAACoT,GACrC/R,EAAamB,aAAe4Q,EAAYC,OAAOlS,SAGjD4K,EAAA,cAACuH,GAAA,EAAD,CAAOX,MAAM,eAAexR,MAAM,cAClC4K,EAAA,cAACuH,GAAA,EAAD,CAAOX,MAAM,UAAUxR,MAAM,ssBC3EvCoS,IAAkBC,sBAElB,IAAMC,GAAgBjL,IAAOqG,IAAV6E,MAWbC,GAAkBnL,IAAOqG,IAAV+E,MAMfC,GAAkBrL,IAAOqG,IAAViF,MAOfC,GAAgBvL,IAAOqG,IAAVmF,MAqDJC,GA7CHrL,YAAS,SAAAsL,GACnB,OAEEnI,EAAA,cAAC0H,GAAD,KACE1H,EAAA,cAAC4H,GAAD,KACE5H,EAAA,cAACoI,EAAA,EAAD,CAAQ3C,UAAU,YAChBzF,EAAA,cAACoI,EAAA,EAAOC,MAAR,CAAcC,MAAOC,IAAUC,MAC7BxI,EAAA,cAACoI,EAAA,EAAOK,QAAR,sCACAzI,EAAA,cAACoI,EAAA,EAAOM,QAAR,MAEA1I,EAAA,cAACyG,GAAD,CACEnR,aAAcd,EAAQc,aACtBoR,eAAgBlS,EAAQkS,oBAMhC1G,EAAA,cAAC8H,GAAD,KACGtT,EAAQmU,cACP3I,EAAA,cAAC4I,GAAD,CAAiBpU,QAASA,IAE1BwL,EAAA,cAAC6I,GAAD,CAAmBrU,QAASA,KAG/BA,EAAQoB,YACPoK,EAAA,cAACgI,GAAD,KACEhI,EAAA,cAAC2G,EAAA,EAAD,CAAWC,MAAM,iBACf5G,EAAA,cAAC8I,EAAA,EAAD,CACE1T,MAAOZ,EAAQgB,YACfqE,IAAK,EACLE,IAC6B,IAA3BvF,EAAQsB,eAAuBtB,EAAQsB,eAAiB,EAAI,IAE9DiT,SAAqC,IAA3BvU,EAAQsB,eAClBkT,cAA6D,GAA9CnK,KAAKoK,KAAK,EAAIzU,EAAQsB,eAAiB,KACtDsR,SAAU,SAAA7R,GAAC,OAAIf,EAAQ0U,eAAe3T,QAI1C,QCxFV4T,SAAgBnJ,EAAA,cAACoJ,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.bf523287.chunk.js","sourcesContent":["/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport { observable, action, computed } from \"mobx\";\nimport { Instructions, IStatistics } from \"./gcode-parser\";\nimport { ITransform } from \"components/GCodeViewer\";\nimport OctoprintConnection from \"./OctoprintConnection\";\n\nexport class UIStore {\n  @observable\n  transform: ITransform = { k: 1, x: 0, y: 0 };\n\n  @observable\n  activeLayer: number = 0;\n\n  @observable\n  trackProgress: boolean = false;\n\n  @observable\n  drawSettings: IDrawSettings = {\n    lineWidth: 2,\n    coloringMode: \"feed_rate\",\n    toolColors: [\"blue\", \"green\", \"red\", \"orange\", \"black\"]\n  };\n\n  @action.bound\n  setDrawSetting(setting: keyof IDrawSettings, value: any) {\n    this.drawSettings[setting] = value;\n  }\n\n  @computed\n  get numberOfLayers() {\n    return this.activeGCode === null ? 0 : this.activeGCode.numberOfLayers;\n  }\n\n  @action\n  setActiveLayer(n: number) {\n    this.activeLayer = n;\n  }\n\n  @action.bound\n  setTransform(newTransform: ITransform) {\n    this.transform = newTransform;\n  }\n\n  @action\n  setActiveGCode(gcode: IGCode | null) {\n    /*if (gcode) {\n      this.setTransform({\n        k: 3,\n        x: gcode.statistics.x.min || 0,\n        y: gcode.statistics.y.min || 0,\n      });\n    }*/\n    this.activeGCode = gcode;\n    this.activeLayer = 1;\n  }\n\n  @observable.ref\n  activeGCode: IGCode | null = null;\n}\n\nconst store = new UIStore();\nexport default store;\n\nexport interface IGCode {\n  name: string;\n  instructions: Instructions;\n  layerPositions: number[];\n  numberOfLayers: number;\n  statistics: IStatistics;\n  connection?: OctoprintConnection;\n  lineIndex: number[];\n}\n\nexport interface IDrawSettings {\n  lineWidth: number;\n  coloringMode: string; // \"feed_rate\" | \"tool\";\n  toolColors: string[];\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\ninterface IMinMax {\n  min: number;\n  max: number;\n}\nexport interface IStatistics {\n  x: IMinMax;\n  y: IMinMax;\n  feed_rate: IMinMax;\n  extruded_feed_rate: IMinMax;\n}\n\nconst STATE_NONE = 0;\nconst STATE_FIELD = 1;\nconst STATE_COMMENT = 2;\n\nconst E = 4;\nconst F = 5;\nconst G = 6;\nconst M = 12;\nconst T = 19;\nconst X = 23;\nconst Y = 24;\nconst Z = 25;\n\nconst CHAR_0 = \"0\".charCodeAt(0);\nconst CHAR_9 = \"9\".charCodeAt(0);\nconst CHAR_DOT = \".\".charCodeAt(0);\nconst CHAR_MINUS = \"-\".charCodeAt(0);\nconst CHAR_SPACE = \" \".charCodeAt(0);\nconst CHAR_TAB = \"\\t\".charCodeAt(0);\nconst CHAR_A = \"A\".charCodeAt(0);\nconst CHAR_Z = \"Z\".charCodeAt(0);\nconst CHAR_LF = \"\\n\".charCodeAt(0);\nconst CHAR_CR = \"\\r\".charCodeAt(0);\nconst CHAR_SEMICOLON = \";\".charCodeAt(0);\n\nexport const COMMANDS = {\n  MOVE_WITH_EXTRUSION: 1, // parameters: X,Y\n  MOVE_WITHOUT_EXTRUSION: 2, // parameters: X,Y\n  SET_FEED_RATE: 3, // parameters: F\n  RETRACTION: 4,\n  LAYER_CHANGE: 5, // parameters: Z\n  TOOL_CHANGE: 6\n};\n\nconst INSTRUCTION_ARRAY_BLOCK_SIZE = 1024 * 32;\n\nconst LOOKUP_BEFORE_DOT = [1, 10, 100, 1000, 10000, 100000, 1000000];\nconst LOOKUP_AFTER_DOT = [0.1, 0.01, 0.001, 0.0001, 0.00001, 0.000001];\n\nexport default class GCodeParser {\n  state = STATE_NONE;\n  field: number = 0;\n  value_start: number | undefined;\n  dot_position: number | undefined;\n  prev_character: number | undefined;\n  field_values = new Float32Array(27);\n\n  axis_coordinates_absolute = true;\n  extruder_coordinates_absolute = false;\n  feed_rate = 0;\n  current_tool = 0;\n\n  // for layer change detection\n  prev_z: number = 0;\n  last_z_with_extrusion: number | undefined;\n  last_feed_rate_with_extrusion: number | undefined;\n  current_layer_index = 0;\n  layer_positions: number[] = [];\n\n  prev_x = 0;\n  prev_y = 0;\n  prev_e = 0;\n\n  instructions = new Instructions(INSTRUCTION_ARRAY_BLOCK_SIZE);\n\n  byte_index = 0;\n  //line_index: number[] = [];\n\n  last_block: Uint8Array | undefined;\n\n  constructor() {\n    this.field_values.fill(NaN);\n  }\n\n  statistics = {\n    x: {\n      min: Infinity,\n      max: -Infinity\n    },\n    y: {\n      min: Infinity,\n      max: -Infinity\n    },\n    feed_rate: {\n      min: Infinity,\n      max: -Infinity\n    },\n    extruded_feed_rate: {\n      min: Infinity,\n      max: -Infinity\n    }\n  };\n\n  parse(gcodeArrayBuffer: ArrayBuffer) {\n    const data = new Uint8Array(gcodeArrayBuffer);\n    var c;\n\n    for (let i = 0; i < data.length; ++i) {\n      c = data[i];\n      if ((c >= CHAR_0 && c <= CHAR_9) || c === CHAR_DOT || c === CHAR_MINUS) {\n        //if (STATE_FIELD) {\n        //value += c;\n        //}\n        if (c === CHAR_DOT) this.dot_position = i;\n      } else if (c === CHAR_SPACE || c === CHAR_TAB) {\n        if (this.state === STATE_FIELD && this.value_start) {\n          if (this.last_block !== undefined) {\n            // Special handling for numbers that cross the boundary of data blocks\n            const temp_data = new Uint8Array(\n              Array.from(this.last_block).concat(Array.from(data.slice(0, i)))\n            );\n            let temp_dot_position = temp_data.length;\n            for (let j = 0; j < temp_data.length; ++j) {\n              if (temp_data[j] === CHAR_DOT) temp_dot_position = j;\n            }\n            this.field_values[this.field - 65] = this.pFloat(\n              temp_data,\n              0,\n              temp_data.length,\n              temp_dot_position\n            );\n            this.last_block = undefined;\n          } else {\n            // regular float handling\n            this.field_values[this.field - 65] = this.pFloat(\n              data,\n              this.value_start,\n              i,\n              this.dot_position ? this.dot_position : i\n            );\n          }\n          this.value_start = undefined;\n          this.dot_position = undefined;\n          this.state = STATE_NONE;\n        }\n      } else if (c >= CHAR_A && c <= CHAR_Z) {\n        if (this.state === STATE_NONE) {\n          this.field = data[i];\n          this.state = STATE_FIELD;\n          this.value_start = i + 1;\n          //console.log(\"F\", this.field);\n        }\n      } else if (\n        (c === CHAR_CR || c === CHAR_LF) &&\n        (this.prev_character !== CHAR_CR && this.prev_character !== CHAR_LF)\n      ) {\n        if (STATE_FIELD && this.value_start) {\n          this.field_values[this.field - 65] = this.pFloat(\n            data,\n            this.value_start,\n            i,\n            this.dot_position ? this.dot_position : i\n          );\n        }\n        this.state = STATE_NONE;\n        this.value_start = undefined;\n        this.dot_position = undefined;\n\n        /*console.log(\n        \"G\",\n        this.field_values[G],\n        this.field_values[X],\n        this.field_values[Y],\n        this.field_values[E],\n        this.extruder_coordinates_absolute,\n        this.prev_e,\n        instruction_index\n      );*/\n        // check if this is a G command\n        if (!isNaN(this.field_values[G])) {\n          switch (this.field_values[G]) {\n            case 0: // G0\n            case 1: // G1\n              // The move or extrude command is moving in the XY plane and not the Z plane\n              // We're not handling XYZ movements at this moment\n              if (\n                !isNaN(this.field_values[X]) ||\n                !isNaN(this.field_values[Y])\n              ) {\n                // If E field is set and\n                // - relative extrusion value is positive or\n                // - absolute extrusion value is larger than previous extrusion value\n                // the command is a move with extrusion\n\n                var command;\n                var x_coord;\n                var y_coord;\n\n                if (\n                  !isNaN(this.field_values[E]) &&\n                  ((this.extruder_coordinates_absolute &&\n                    this.field_values[E] > this.prev_e) ||\n                    (!this.extruder_coordinates_absolute &&\n                      this.field_values[E] > 0))\n                ) {\n                  if (this.prev_z !== this.last_z_with_extrusion) {\n                    this.instructions.addInstruction(\n                      COMMANDS.LAYER_CHANGE,\n                      this.prev_z\n                    );\n                    //this.line_index.push(this.byte_index);\n                    this.layer_positions.push(\n                      this.instructions.totalInstructions\n                    );\n                    this.current_layer_index += 1;\n\n                    // set all relevant parameters at the start of each layer\n                    // so that each layer contains all necessary information\n                    // for displaying it\n                    this.instructions.addInstruction(\n                      COMMANDS.MOVE_WITHOUT_EXTRUSION,\n                      this.prev_x,\n                      this.prev_y\n                    );\n                    this.instructions.addInstruction(\n                      COMMANDS.SET_FEED_RATE,\n                      this.feed_rate\n                    );\n                    this.instructions.addInstruction(\n                      COMMANDS.TOOL_CHANGE,\n                      this.current_tool\n                    );\n                  }\n\n                  command = COMMANDS.MOVE_WITH_EXTRUSION;\n                  this.last_z_with_extrusion = this.prev_z;\n                  if (this.feed_rate !== this.last_feed_rate_with_extrusion) {\n                    if (this.feed_rate > this.statistics.extruded_feed_rate.max)\n                      this.statistics.extruded_feed_rate.max = this.feed_rate;\n                    if (this.feed_rate < this.statistics.extruded_feed_rate.min)\n                      this.statistics.extruded_feed_rate.min = this.feed_rate;\n                  }\n                  this.last_feed_rate_with_extrusion = this.feed_rate;\n                } else {\n                  command = COMMANDS.MOVE_WITHOUT_EXTRUSION;\n                }\n\n                // Set X value for move command\n                if (!isNaN(this.field_values[X])) {\n                  if (this.axis_coordinates_absolute)\n                    x_coord = this.field_values[X];\n                  else x_coord = this.prev_x + this.field_values[X];\n                  if (x_coord > this.statistics.x.max)\n                    this.statistics.x.max = x_coord;\n                  if (x_coord < this.statistics.x.min)\n                    this.statistics.x.min = x_coord;\n                } else x_coord = this.prev_x;\n\n                // Set Y value for move command\n                if (!isNaN(this.field_values[Y])) {\n                  if (this.axis_coordinates_absolute)\n                    y_coord = this.field_values[Y];\n                  else y_coord = this.prev_y + this.field_values[Y];\n                  if (y_coord > this.statistics.y.max)\n                    this.statistics.y.max = y_coord;\n                  if (y_coord < this.statistics.y.min)\n                    this.statistics.y.min = y_coord;\n                } else y_coord = this.prev_y;\n                this.instructions.addInstruction(command, x_coord, y_coord);\n                //this.line_index.push(this.byte_index);\n                this.prev_x = x_coord;\n                this.prev_y = y_coord;\n              }\n\n              // Set feed rate if F field is present\n              if (!isNaN(this.field_values[F])) {\n                this.feed_rate = this.field_values[F];\n                this.instructions.addInstruction(\n                  COMMANDS.SET_FEED_RATE,\n                  this.field_values[F]\n                );\n                if (this.feed_rate > this.statistics.feed_rate.max)\n                  this.statistics.feed_rate.max = this.feed_rate;\n                if (this.feed_rate < this.statistics.feed_rate.min)\n                  this.statistics.feed_rate.min = this.feed_rate;\n                //this.line_index.push(this.byte_index);\n              }\n\n              if (!isNaN(this.field_values[Z])) {\n                if (this.field_values[Z] > this.prev_z) {\n                  this.instructions.addInstruction(COMMANDS.RETRACTION);\n                  //this.line_index.push(this.byte_index);\n                }\n                this.prev_z = this.field_values[Z];\n              }\n\n              break;\n            case 90: // G90\n              this.axis_coordinates_absolute = true;\n              break;\n            case 91: // G91\n              this.axis_coordinates_absolute = false;\n              break;\n          }\n        }\n        // check if this is a G command\n        else if (!isNaN(this.field_values[M])) {\n          switch (this.field_values[M]) {\n            case 82:\n              this.extruder_coordinates_absolute = true;\n              break;\n            case 83:\n              this.extruder_coordinates_absolute = false;\n              break;\n          }\n        } else if (!isNaN(this.field_values[T])) {\n          this.instructions.addInstruction(\n            COMMANDS.TOOL_CHANGE,\n            this.field_values[T]\n          );\n          this.current_tool = this.field_values[T];\n        }\n\n        // reset all fields to NaN so that we don't use fields defined\n        // in previous commands if the current command does not have an optional\n        // field set\n        //\n        // this is faster than using \"field_values.fill(NaN)\" for some reason\n        for (let j = 0; j < 27; j++) {\n          this.field_values[j] = NaN;\n        }\n      } else if (c === CHAR_SEMICOLON) {\n        this.state = STATE_COMMENT;\n      }\n      this.prev_character = c;\n      this.byte_index += 1;\n    }\n    if (this.state === STATE_FIELD) {\n      this.last_block = data.slice(this.value_start);\n    }\n    //console.log((instruction_index * 4) / 1024 / 1024, instructions_f32);\n  }\n\n  pFloat(\n    data: Uint8Array,\n    data_start: number,\n    data_end: number,\n    dot_location: number\n  ) {\n    let result = 0;\n    let negative = false;\n\n    for (let i = data_start; i < data_end; ++i) {\n      let n = data[i] - 48;\n      if (i === data_start && data[i] === CHAR_MINUS) {\n        negative = true;\n      } else if (i < dot_location) {\n        result += n * LOOKUP_BEFORE_DOT[dot_location - i - 1];\n      } else if (i > dot_location)\n        result += n * LOOKUP_AFTER_DOT[i - dot_location - 1];\n    }\n    return negative ? -result : result;\n  }\n\n  getParsingResult() {\n    return {\n      instructions: this.instructions,\n      layerPositions: this.layer_positions,\n      statistics: this.statistics,\n      lineIndex: [] //this.line_index\n    };\n  }\n}\n\nexport class Instructions {\n  blockSizeInInstructions: number;\n  buffers: ArrayBuffer[] = [];\n  currentBuffer = 0;\n  currentInstruction = 0;\n  currentFloat32Array: Float32Array;\n  totalInstructions = 0;\n\n  constructor(blockSizeInInstructions: number) {\n    this.blockSizeInInstructions = blockSizeInInstructions;\n    this.buffers.push(new ArrayBuffer(this.blockSizeInInstructions * 3 * 4));\n    this.currentFloat32Array = new Float32Array(\n      this.buffers[this.currentBuffer]\n    );\n  }\n\n  addInstruction(command: number, param1?: number, param2?: number) {\n    this.currentFloat32Array[this.currentInstruction * 3] = command;\n    if (param1 !== undefined)\n      this.currentFloat32Array[this.currentInstruction * 3 + 1] = param1;\n    if (param2 !== undefined)\n      this.currentFloat32Array[this.currentInstruction * 3 + 2] = param2;\n    this.currentInstruction += 1;\n    this.totalInstructions += 1;\n\n    if (this.currentInstruction >= this.blockSizeInInstructions) {\n      this.buffers.push(new ArrayBuffer(this.blockSizeInInstructions * 3 * 4));\n      this.currentBuffer += 1;\n      this.currentInstruction = 0;\n      this.currentFloat32Array = new Float32Array(\n        this.buffers[this.currentBuffer]\n      );\n    }\n  }\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { Instructions, COMMANDS, IStatistics } from \"app/gcode-parser\";\nimport { zoom } from \"d3-zoom\";\nimport { select, event } from \"d3-selection\";\nimport { scaleLinear } from \"d3-scale\";\nimport { interpolateInferno } from \"d3-scale-chromatic\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { IGCode, IDrawSettings } from \"app/UIStore\";\nimport { action } from \"mobx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { ResizeSensor } from \"@blueprintjs/core\";\n\nconst StyledCanvas = styled.canvas`\n  flex: 1;\n`;\n\ninterface IProps {\n  from: number;\n  to: number;\n  activeGCode: IGCode | null;\n  transform: ITransform;\n  setTransform: (newTransfrom: ITransform) => void;\n  drawSettings: IDrawSettings;\n}\n\nexport interface ITransform {\n  k: number;\n  x: number;\n  y: number;\n}\n\nconst GCodeViewer = observer(\n  ({\n    from,\n    to,\n    activeGCode,\n    transform,\n    setTransform,\n    drawSettings\n  }: IProps) => {\n    const [context, setContext] = useState<CanvasRenderingContext2D | null>(\n      null\n    );\n\n    let canvas = useRef<HTMLCanvasElement>(null);\n\n    const doZoom = action(\"update transform\", () => {\n      /*const { k, x, y } = event.transform;\n      set(transform, \"x\", x);\n      set(transform, \"y\", y);\n      set(transform, \"k\", k);\n      transform.x = x;\n      transform.y = y;\n      transform.k = k;*/\n      //transform = { k, x, y };\n      setTransform(event.transform);\n    });\n\n    function draw() {\n      if (canvas.current === null || context === null || activeGCode === null) {\n        return;\n      }\n\n      clearCanvas(canvas.current, context);\n      drawInstructions(\n        context,\n        from,\n        to,\n        activeGCode.instructions,\n        transform,\n        devicePixelRatio,\n        drawSettings,\n        activeGCode.statistics\n      );\n    }\n\n    function handleResize() {\n      if (canvas.current === null) return;\n\n      const currentHeight = canvas.current.clientHeight;\n      const currentWidth = canvas.current.clientWidth;\n      var devicePixelRatio = window.devicePixelRatio || 1;\n      if (\n        canvas.current.width !== currentWidth * devicePixelRatio ||\n        canvas.current.height !== currentHeight * devicePixelRatio\n      ) {\n        canvas.current.width = currentWidth * devicePixelRatio;\n        canvas.current.height = currentHeight * devicePixelRatio;\n      }\n      draw();\n    }\n\n    useEffect(() => {\n      if (context) {\n        draw();\n      } else {\n        if (canvas.current) setContext(canvas.current.getContext(\"2d\"));\n\n        const zoomBehaviour = zoom()\n          .on(\"zoom\", doZoom)\n          .scaleExtent([1, 128]);\n\n        if (canvas.current !== null)\n          zoomBehaviour(select(canvas.current as any));\n\n        //handleResize();\n      }\n    });\n\n    // hack to get mobx to notice we use this Observable\n    var tmp = drawSettings.lineWidth;\n    var tmp2 = drawSettings.coloringMode;\n\n    return (\n      <ResizeSensor onResize={handleResize}>\n        <StyledCanvas ref={canvas} />\n      </ResizeSensor>\n    );\n  }\n);\nexport default GCodeViewer;\n\nfunction drawInstructions(\n  context: CanvasRenderingContext2D,\n  from: number,\n  to: number,\n  instructions: Instructions,\n  transform: any,\n  devicePixelRatio: number,\n  drawSettings: IDrawSettings,\n  statistics: IStatistics\n) {\n  const feedRateScale = scaleLinear()\n    .domain([\n      statistics.extruded_feed_rate.min,\n      statistics.extruded_feed_rate.max\n    ])\n    .range([0, 0.8]);\n\n  let prevX = 0;\n  let prevY = 0;\n\n  context.setTransform(\n    transform.k * devicePixelRatio,\n    0,\n    0,\n    transform.k * devicePixelRatio,\n    transform.x * devicePixelRatio,\n    transform.y * devicePixelRatio\n  );\n  context.lineWidth = drawSettings.lineWidth / transform.k;\n  context.lineCap = \"round\";\n  context.beginPath();\n\n  const firstBuffer = Math.floor(from / instructions.blockSizeInInstructions);\n  const lastBuffer = Math.floor(to / instructions.blockSizeInInstructions);\n\n  let currentF32Buffer;\n  let command;\n  let param1, param2;\n\n  for (let i = firstBuffer; i <= lastBuffer; ++i) {\n    currentF32Buffer = new Float32Array(instructions.buffers[i]);\n\n    let offset = from - i * instructions.blockSizeInInstructions;\n    let end = to - i * instructions.blockSizeInInstructions;\n\n    for (let j = offset * 3; j < end * 3; j += 3) {\n      command = currentF32Buffer[j];\n      param1 = currentF32Buffer[j + 1];\n      param2 = currentF32Buffer[j + 2];\n\n      switch (command) {\n        case COMMANDS.MOVE_WITHOUT_EXTRUSION:\n          context.moveTo(param1, param2);\n          prevX = param1;\n          prevY = param2;\n          break;\n        case COMMANDS.MOVE_WITH_EXTRUSION:\n          context.lineTo(param1, param2);\n          prevX = param1;\n          prevY = param2;\n          break;\n        case COMMANDS.SET_FEED_RATE:\n          if (drawSettings.coloringMode === \"feed_rate\") {\n            context.stroke();\n            context.beginPath();\n            context.moveTo(prevX, prevY);\n            context.strokeStyle = interpolateInferno(feedRateScale(param1));\n          }\n          break;\n        case COMMANDS.TOOL_CHANGE:\n          if (drawSettings.coloringMode === \"tool\") {\n            context.stroke();\n            context.beginPath();\n            context.moveTo(prevX, prevY);\n\n            var color = drawSettings.toolColors[param1];\n            if (color) {\n              context.strokeStyle = color;\n            } else context.strokeStyle = \"grey\";\n          }\n          break;\n      }\n    }\n  }\n  context.stroke();\n\n  /*for (let i = from; i < to; ++i) {\n    let command = instructions.i8[i * 16];\n    let v1 = instructions.f32[i * 4 + 1];\n    let v2 = instructions.f32[i * 4 + 2];\n    if (command === 1) {\n      context.moveTo(v1, v2);\n      prevX = v1;\n      prevY = v2;\n    } else if (command === 2) {\n      context.lineTo(v1, v2);\n      prevX = v1;\n      prevY = v2;\n    } else if (command === 3) {\n      context.stroke();\n      context.beginPath();\n      context.moveTo(prevX, prevY);\n      context.strokeStyle = interpolateInferno(\n        feedRateScale(instructions.f32[i * 4 + 1])\n      );\n    }\n  }\n  context.stroke();*/\n}\n\nfunction clearCanvas(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.restore();\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { UIStore, IGCode } from \"app/UIStore\";\nimport GCodeViewer from \"./GCodeViewer\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  UIStore: UIStore;\n}\n\nconst LiveGCodeViewer = observer(\n  ({\n    UIStore: { activeGCode, transform, setTransform, drawSettings }\n  }: IProps) => {\n    if (\n      activeGCode &&\n      activeGCode.connection &&\n      activeGCode.connection.progress\n    ) {\n      const currentLine = getLineByBytePos(\n        activeGCode.connection.progress.filepos,\n        activeGCode\n      );\n      const from = findLayerByLine(activeGCode.layerPositions, currentLine);\n      const to = currentLine;\n      /*console.log(\n      \"LIVE\",\n      activeGCode.connection.progress.filepos,\n      currentLine,\n      from,\n      to\n    );*/\n      return (\n        <GCodeViewer\n          from={from}\n          to={to}\n          activeGCode={activeGCode}\n          transform={transform}\n          setTransform={setTransform}\n          drawSettings={drawSettings}\n        />\n      );\n    } else return <div>No GCode</div>;\n  }\n);\nexport default LiveGCodeViewer;\n\nfunction findLayerByLine(layerPositions: number[], currentLine: number) {\n  for (let i = 0; i < layerPositions.length; ++i) {\n    if (layerPositions[i] > currentLine) {\n      return layerPositions[i - 1];\n    }\n  }\n  return layerPositions.length;\n}\n\nfunction getLineByBytePos(bytepos: number, activeGCode: IGCode) {\n  for (let i = 0; i < activeGCode.lineIndex.length; ++i) {\n    if (activeGCode.lineIndex[i] > bytepos) {\n      return i;\n    }\n  }\n  return activeGCode.lineIndex.length;\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport GCodeParser from \"./gcode-parser\";\nimport { IGCode } from \"./UIStore\";\n\nexport function uploadGCodeFiles(files: FileList): Promise<IGCode> {\n  return new Promise((resolve, reject) => {\n    let file: File = files[0];\n    const reader = new FileReader();\n    let offset = 0;\n\n    const parser = new GCodeParser();\n    const t0 = performance.now();\n\n    function readSlice() {\n      let s = file.slice(offset, offset + 1024 * 1024);\n      reader.readAsArrayBuffer(s);\n    }\n\n    reader.onload = () => {\n      parser.parse(reader.result as ArrayBuffer);\n      offset += 1024 * 1024;\n      if (offset < file.size) readSlice();\n      else {\n        const delta = performance.now() - t0;\n        const fileSizeMB = file.size / 1024 / 1024;\n\n        console.log(\n          `Read ${fileSizeMB.toFixed(2)} megabytes in ${delta.toFixed(\n            0\n          )} ms. ${(delta / fileSizeMB).toFixed(0)} ms/megabyte`\n        );\n        const parsingResult = parser.getParsingResult();\n        resolve({\n          name: file.name,\n          numberOfLayers: parsingResult.layerPositions.length,\n          ...parsingResult\n        });\n      }\n    };\n    readSlice();\n  });\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from \"styled-components\";\nimport { uploadGCodeFiles } from \"app/file-upload\";\nimport UIStore from \"app/UIStore\";\n\nconst DropzoneContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  margin: 10px;\n  border-width: 4px;\n  border-radius: 2px;\n  border-color: #bbb;\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #333;\n`;\n\ninterface IProps {\n  onFileLoad: () => void;\n}\n\nexport function GCodeDropzone({ onFileLoad }: IProps) {\n  const onDrop = useCallback(async acceptedFiles => {\n    UIStore.setActiveGCode(null);\n    const gcode = await uploadGCodeFiles(acceptedFiles);\n    UIStore.setActiveGCode(gcode);\n    if (onFileLoad) onFileLoad();\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <DropzoneContainer {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      )}\n    </DropzoneContainer>\n  );\n}\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport { UIStore } from \"app/UIStore\";\nimport GCodeViewer from \"./GCodeViewer\";\nimport { observer } from \"mobx-react-lite\";\nimport { GCodeDropzone } from \"./GCodeDropzone\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  UIStore: UIStore;\n}\nconst StyledDiv = styled.div`\n  flex: 1;\n  display: flex;\n`;\n\nconst StaticGCodeViewer = observer(\n  ({\n    UIStore: { activeGCode, activeLayer, transform, setTransform, drawSettings }\n  }: IProps) => {\n    const [isDragging, setDragging] = useState<boolean>(false);\n\n    function handleDragOver(e: any) {\n      setDragging(true);\n    }\n\n    function handleDragLeave(e: any) {\n      setDragging(false);\n    }\n\n    if (activeGCode && !isDragging) {\n      return (\n        <StyledDiv onDragOver={handleDragOver} onDragLeave={handleDragLeave}>\n          <GCodeViewer\n            from={activeGCode.layerPositions[activeLayer]}\n            to={activeGCode.layerPositions[activeLayer + 1]}\n            activeGCode={activeGCode}\n            transform={transform}\n            setTransform={setTransform}\n            drawSettings={drawSettings}\n          />\n        </StyledDiv>\n      );\n    } else return <GCodeDropzone onFileLoad={() => setDragging(false)} />;\n  }\n);\nexport default StaticGCodeViewer;\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport {\n  Button,\n  Drawer,\n  Classes,\n  NumericInput,\n  FormGroup,\n  RadioGroup,\n  Radio\n} from \"@blueprintjs/core\";\nimport { useState } from \"react\";\nimport { IDrawSettings } from \"app/UIStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { action } from \"mobx\";\n\ninterface IDrawSettingsButtonProps {\n  drawSettings: IDrawSettings;\n  setDrawSetting: (setting: keyof IDrawSettings, value: any) => void;\n}\n\nconst DrawSettingsButton = observer((props: IDrawSettingsButtonProps) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button\n        className=\"bp3-minimal\"\n        icon=\"cog\"\n        text=\"Draw settings\"\n        onClick={() => setOpen(true)}\n      />\n      <SettingsDrawer\n        isOpen={isOpen}\n        handleClose={() => setOpen(false)}\n        {...props}\n      />\n    </>\n  );\n});\nexport default DrawSettingsButton;\n\nconst SettingsDrawer = observer(\n  ({\n    isOpen,\n    handleClose,\n    ...props\n  }: {\n    isOpen: boolean;\n    handleClose: () => void;\n    drawSettings: IDrawSettings;\n    setDrawSetting: (setting: keyof IDrawSettings, value: any) => void;\n  }) => {\n    return (\n      <Drawer\n        isOpen={isOpen}\n        icon=\"cog\"\n        size=\"20%\"\n        hasBackdrop={false}\n        onClose={handleClose}\n        title=\"Draw Settings\"\n      >\n        <div className={Classes.DRAWER_BODY}>\n          <div className={Classes.DIALOG_BODY}>\n            <DrawSettings {...props} />\n          </div>\n        </div>\n      </Drawer>\n    );\n  }\n);\n\nconst DrawSettings = observer(\n  ({ drawSettings, setDrawSetting }: IDrawSettingsButtonProps) => {\n    return (\n      <div>\n        <FormGroup label=\"Linewidth\" labelFor=\"linewidth-input\">\n          <NumericInput\n            value={drawSettings.lineWidth}\n            id=\"linewidth-input\"\n            onValueChange={action(\n              \"set line width\",\n              (newValue: any) => (drawSettings.lineWidth = newValue)\n            )}\n          />\n        </FormGroup>\n        <RadioGroup\n          label=\"Coloring mode\"\n          selectedValue={drawSettings.coloringMode}\n          onChange={action(\"set coloring mode\", (changeEvent: any) => {\n            drawSettings.coloringMode = changeEvent.target.value;\n          })}\n        >\n          <Radio label=\"by feed rate\" value=\"feed_rate\" />\n          <Radio label=\"by tool\" value=\"tool\" />\n        </RadioGroup>\n      </div>\n    );\n  }\n);\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport { FocusStyleManager } from \"@blueprintjs/core\";\n\nimport \"normalize.css/normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nimport * as React from \"react\";\nimport { FormGroup, Navbar, Alignment } from \"@blueprintjs/core\";\n\nimport styled from \"styled-components\";\nimport { Slider } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react-lite\";\nimport UIStore from \"app/UIStore\";\n\nimport LiveGCodeViewer from \"./LiveGCodeViewer\";\nimport StaticGCodeViewer from \"./StaticGCodeViewer\";\nimport DrawSettingsButton from \"./DrawSettings\";\n\n// See https://blueprintjs.com/docs/#core/accessibility.focus-management\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst GridContainer = styled.div`\n  background: #eee;\n  display: grid;\n  grid-template-columns: 200px minmax(0, 1fr);\n  grid-template-rows: auto minmax(0, 1fr) auto;\n  width: 100vw;\n  height: 100vh;\n  align-self: stretch;\n  overflow: hidden;\n`;\n\nconst TopbarContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 1;\n  gap: 0;\n`;\n\nconst ViewerContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 2;\n  background: white;\n  display: flex;\n`;\n\nconst ToolContainer = styled.div`\n  grid-column: 1/3;\n  grid-row: 3;\n  padding: 0 20px 0 20px;\n`;\n\ninterface IProps {}\n\nconst App = observer(IProps => {\n  return (\n    //<React.StrictMode>\n    <GridContainer>\n      <TopbarContainer>\n        <Navbar className=\"bp3-dark\">\n          <Navbar.Group align={Alignment.LEFT}>\n            <Navbar.Heading>G-Code viewer for 3D printing</Navbar.Heading>\n            <Navbar.Divider />\n\n            <DrawSettingsButton\n              drawSettings={UIStore.drawSettings}\n              setDrawSetting={UIStore.setDrawSetting}\n            />\n          </Navbar.Group>\n        </Navbar>\n      </TopbarContainer>\n\n      <ViewerContainer>\n        {UIStore.trackProgress ? (\n          <LiveGCodeViewer UIStore={UIStore} />\n        ) : (\n          <StaticGCodeViewer UIStore={UIStore} />\n        )}\n      </ViewerContainer>\n      {UIStore.activeGCode ? (\n        <ToolContainer>\n          <FormGroup label=\"Current layer\">\n            <Slider\n              value={UIStore.activeLayer}\n              min={1}\n              max={\n                UIStore.numberOfLayers !== 0 ? UIStore.numberOfLayers - 2 : 100\n              }\n              disabled={UIStore.numberOfLayers === 0}\n              labelStepSize={Math.ceil(1 + UIStore.numberOfLayers / 200) * 10}\n              onChange={n => UIStore.setActiveLayer(n)}\n            />\n          </FormGroup>\n        </ToolContainer>\n      ) : null}\n    </GridContainer>\n    //</React.StrictMode>\n  );\n});\nexport default App;\n","/* \nCopyright 2019 Fabian Hiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n*/\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}